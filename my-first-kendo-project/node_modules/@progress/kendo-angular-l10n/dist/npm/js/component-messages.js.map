{"version":3,"sources":["webpack:///webpack/bootstrap bc856fb5d39365809fe2","webpack:///./src/component-messages.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;ACnCA;;;;;IAKG;AACH;KAAA;KAYA,CAAC;KATC,sBAAc,uCAAQ;cAAtB;aACE,MAAM,CAAC,KAAK,CAAC;SACf,CAAC;;;QAAA;KAEM,uCAAW,GAAlB,UAAmB,OAAsB;SAAzC,iBAIC;SAHC,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAElC,IAAI,CAAC,OAAO,CAAC,aAAG,IAAI,YAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAI,CAAC,GAAG,CAAC,EAAE,KAAI,CAAC,QAAQ,CAAC,EAApD,CAAoD,CAAC,CAAC;KAC5E,CAAC;KACH,wBAAC;AAAD,EAAC;AAZqB,0BAAiB,oBAYtC","file":"src/component-messages.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bc856fb5d39365809fe2","import { OnChanges, SimpleChanges } from '@angular/core';\nimport { LocalizationService } from './localization.service';\n\n/**\n * Base class that acts as a  component messages container\n *\n * For internal use.\n * @hidden\n */\nexport abstract class ComponentMessages implements OnChanges {\n  protected service: LocalizationService;\n\n  protected get override(): boolean {\n    return false;\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    const keys = Object.keys(changes);\n\n    keys.forEach(key => this.service.register(key, this[key], this.override));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/component-messages.ts"],"sourceRoot":""}