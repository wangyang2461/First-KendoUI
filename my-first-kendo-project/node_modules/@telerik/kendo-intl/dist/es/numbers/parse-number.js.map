{"version":3,"file":"parse-number.js","sources":["parse-number.js"],"sourcesContent":["import { localeInfo, localeCurrency, currencyDisplays } from '../cldr';\n\nconst exponentRegExp = /[eE][\\-+]?[0-9]+/;\nconst nonBreakingSpaceRegExp = /\\u00A0/g;\n\nfunction cleanCurrencyNumber(value, info, format) {\n    let isCurrency = format.style === \"currency\";\n    let number = value;\n    let negative;\n\n    const currency = format.currency || localeCurrency(info, isCurrency);\n\n    if (currency) {\n        const displays = currencyDisplays(info, currency);\n        for (let idx = 0; idx < displays.length; idx++) {\n            let display = displays[idx];\n            if (number.includes(display)) {\n                number = number.replace(display, \"\");\n                isCurrency = true;\n                break;\n            }\n        }\n\n        if (isCurrency) {\n            const patterns = info.numbers.currency.patterns;\n            if (patterns.length > 1) {\n                const parts = (patterns[1] || \"\").replace(\"$\", \"\").split(\"n\");\n                if (number.indexOf(parts[0]) > -1 && number.indexOf(parts[1]) > -1) {\n                    number = number.replace(parts[0], \"\").replace(parts[1], \"\");\n                    negative = true;\n                }\n            }\n        }\n    }\n\n    return {\n        number: number,\n        negative: negative\n    };\n}\n\nexport default function parseNumber(value, locale = \"en\", format = {}) {\n    if (!value && value !== 0) {\n        return null;\n    }\n\n    if (typeof value === \"number\") {\n        return value;\n    }\n\n    const info = localeInfo(locale);\n    const symbols = info.numbers.symbols;\n\n    let number = value.toString();\n    let isPercent;\n\n    if (exponentRegExp.test(number)) {\n        number = parseFloat(number.replace(symbols.decimal, \".\"));\n        return isNaN(number) ? null : number;\n    }\n\n    const negativeSignIndex = number.indexOf(\"-\");\n    if (negativeSignIndex > 0) {\n        return null;\n    }\n\n    let isNegative = negativeSignIndex > -1;\n    const { negative: negativeCurrency, number: newNumber } = cleanCurrencyNumber(number, info, format);\n\n    number = newNumber;\n    isNegative = negativeCurrency !== undefined ? negativeCurrency : isNegative;\n\n    if (format.style === \"percent\" || number.indexOf(symbols.percentSign) > -1) {\n        number = number.replace(symbols.percentSign, \"\");\n        isPercent = true;\n    }\n\n    number = number.replace(\"-\", \"\")\n          .replace(nonBreakingSpaceRegExp, \" \")\n          .split(symbols.group.replace(nonBreakingSpaceRegExp, \" \")).join(\"\")\n          .replace(symbols.decimal, \".\");\n\n    number = parseFloat(number);\n\n    if (isNaN(number)) {\n        number = null;\n    } else if (isNegative) {\n        number *= -1;\n    }\n\n    if (number && isPercent) {\n        number /= 100;\n    }\n\n    return number;\n}\n"],"names":["const","let"],"mappings":"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"}