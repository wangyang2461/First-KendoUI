{"version":3,"file":"main.js","sources":["cldr/default-data.js","error-details.js","errors.js","cldr/info.js","cldr/territory.js","cldr/parse-range-date.js","cldr/currency.js","cldr/load-numbers.js","cldr/load-dates.js","cldr/load.js","cldr/date-field-name.js","cldr/date-format-names.js","cldr/first-day.js","cldr/number-symbols.js","numbers/format-currency-symbol.js","numbers/group-integer.js","common/pad.js","common/round.js","numbers/standard-number-format.js","numbers/custom-number-format.js","numbers/format-number.js","numbers/parse-number.js","common/format-string.js","dates/date-pattern.js","dates/date-name-type.js","dates/format-names.js","common/is-date.js","dates/constants.js","dates/format-date.js","dates/time-utils.js","dates/parse-date.js","dates/split-date-format.js","format.js"],"sourcesContent":["const defaultData = {\n    \"en\": {\n        \"name\": \"en\",\n        \"identity\": {\n            \"version\": {\n                \"_number\": \"$Revision: 12418 $\",\n                \"_cldrVersion\": \"29\"\n            },\n            \"language\": \"en\"\n        },\n        \"territory\": \"US\",\n        \"numbers\": {\n            \"symbols\": {\n                \"decimal\": \".\",\n                \"group\": \",\",\n                \"list\": \";\",\n                \"percentSign\": \"%\",\n                \"plusSign\": \"+\",\n                \"minusSign\": \"-\",\n                \"exponential\": \"E\",\n                \"superscriptingExponent\": \"×\",\n                \"perMille\": \"‰\",\n                \"infinity\": \"∞\",\n                \"nan\": \"NaN\",\n                \"timeSeparator\": \":\"\n            },\n            \"decimal\": {\n                \"patterns\": [\n                    \"n\"\n                ],\n                \"groupSize\": [\n                    3\n                ]\n            },\n            \"scientific\": {\n                \"patterns\": [\n                    \"nEn\"\n                ],\n                \"groupSize\": []\n            },\n            \"percent\": {\n                \"patterns\": [\n                    \"n%\"\n                ],\n                \"groupSize\": [\n                    3\n                ]\n            },\n            \"currency\": {\n                \"patterns\": [\n                    \"$n\"\n                ],\n                \"groupSize\": [\n                    3\n                ],\n                \"unitPattern-count-one\": \"n $\",\n                \"unitPattern-count-other\": \"n $\"\n            },\n            \"currencies\": {\n                \"BGN\": {\n                    \"displayName\": \"Bulgarian Lev\",\n                    \"displayName-count-one\": \"Bulgarian lev\",\n                    \"displayName-count-other\": \"Bulgarian leva\",\n                    \"symbol\": \"BGN\"\n                },\n                \"EUR\": {\n                    \"displayName\": \"Euro\",\n                    \"displayName-count-one\": \"euro\",\n                    \"displayName-count-other\": \"euros\",\n                    \"symbol\": \"€\",\n                    \"symbol-alt-narrow\": \"€\"\n                },\n                \"USD\": {\n                    \"displayName\": \"US Dollar\",\n                    \"displayName-count-one\": \"US dollar\",\n                    \"displayName-count-other\": \"US dollars\",\n                    \"symbol\": \"$\",\n                    \"symbol-alt-narrow\": \"$\"\n                }\n            },\n            \"localeCurrency\": \"USD\"\n        },\n        \"calendar\": {\n            \"gmtFormat\": \"GMT{0}\",\n            \"gmtZeroFormat\": \"GMT\",\n            \"patterns\": {\n                \"d\": \"M/d/y\",\n                \"D\": \"EEEE, MMMM d, y\",\n                \"m\": \"MMM d\",\n                \"M\": \"MMMM d\",\n                \"y\": \"MMM y\",\n                \"Y\": \"MMMM y\",\n                \"F\": \"EEEE, MMMM d, y h:mm:ss a\",\n                \"g\": \"M/d/y h:mm a\",\n                \"G\": \"M/d/y h:mm:ss a\",\n                \"t\": \"h:mm a\",\n                \"T\": \"h:mm:ss a\",\n                \"s\": \"yyyy'-'MM'-'dd'T'HH':'mm':'ss\",\n                \"u\": \"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\"\n            },\n            \"dateTimeFormats\": {\n                \"full\": \"{1} 'at' {0}\",\n                \"long\": \"{1} 'at' {0}\",\n                \"medium\": \"{1}, {0}\",\n                \"short\": \"{1}, {0}\",\n                \"availableFormats\": {\n                    \"d\": \"d\",\n                    \"E\": \"ccc\",\n                    \"Ed\": \"d E\",\n                    \"Ehm\": \"E h:mm a\",\n                    \"EHm\": \"E HH:mm\",\n                    \"Ehms\": \"E h:mm:ss a\",\n                    \"EHms\": \"E HH:mm:ss\",\n                    \"Gy\": \"y G\",\n                    \"GyMMM\": \"MMM y G\",\n                    \"GyMMMd\": \"MMM d, y G\",\n                    \"GyMMMEd\": \"E, MMM d, y G\",\n                    \"h\": \"h a\",\n                    \"H\": \"HH\",\n                    \"hm\": \"h:mm a\",\n                    \"Hm\": \"HH:mm\",\n                    \"hms\": \"h:mm:ss a\",\n                    \"Hms\": \"HH:mm:ss\",\n                    \"hmsv\": \"h:mm:ss a v\",\n                    \"Hmsv\": \"HH:mm:ss v\",\n                    \"hmv\": \"h:mm a v\",\n                    \"Hmv\": \"HH:mm v\",\n                    \"M\": \"L\",\n                    \"Md\": \"M/d\",\n                    \"MEd\": \"E, M/d\",\n                    \"MMM\": \"LLL\",\n                    \"MMMd\": \"MMM d\",\n                    \"MMMEd\": \"E, MMM d\",\n                    \"MMMMd\": \"MMMM d\",\n                    \"MMMMW\": \"'week' W 'of' MMM\",\n                    \"ms\": \"mm:ss\",\n                    \"y\": \"y\",\n                    \"yM\": \"M/y\",\n                    \"yMd\": \"M/d/y\",\n                    \"yMEd\": \"E, M/d/y\",\n                    \"yMMM\": \"MMM y\",\n                    \"yMMMd\": \"MMM d, y\",\n                    \"yMMMEd\": \"E, MMM d, y\",\n                    \"yMMMM\": \"MMMM y\",\n                    \"yQQQ\": \"QQQ y\",\n                    \"yQQQQ\": \"QQQQ y\",\n                    \"yw\": \"'week' w 'of' y\"\n                },\n                \"appendItems\": {\n                    \"Day\": \"{0} ({2}: {1})\",\n                    \"Day-Of-Week\": \"{0} {1}\",\n                    \"Era\": \"{0} {1}\",\n                    \"Hour\": \"{0} ({2}: {1})\",\n                    \"Minute\": \"{0} ({2}: {1})\",\n                    \"Month\": \"{0} ({2}: {1})\",\n                    \"Quarter\": \"{0} ({2}: {1})\",\n                    \"Second\": \"{0} ({2}: {1})\",\n                    \"Timezone\": \"{0} {1}\",\n                    \"Week\": \"{0} ({2}: {1})\",\n                    \"Year\": \"{0} {1}\"\n                },\n                \"intervalFormats\": {\n                    \"intervalFormatFallback\": \"{0} – {1}\",\n                    \"d\": {\n                        \"d\": \"d – d\"\n                    },\n                    \"h\": {\n                        \"a\": \"h a – h a\",\n                        \"h\": \"h – h a\"\n                    },\n                    \"H\": {\n                        \"H\": \"HH – HH\"\n                    },\n                    \"hm\": {\n                        \"a\": \"h:mm a – h:mm a\",\n                        \"h\": \"h:mm – h:mm a\",\n                        \"m\": \"h:mm – h:mm a\"\n                    },\n                    \"Hm\": {\n                        \"H\": \"HH:mm – HH:mm\",\n                        \"m\": \"HH:mm – HH:mm\"\n                    },\n                    \"hmv\": {\n                        \"a\": \"h:mm a – h:mm a v\",\n                        \"h\": \"h:mm – h:mm a v\",\n                        \"m\": \"h:mm – h:mm a v\"\n                    },\n                    \"Hmv\": {\n                        \"H\": \"HH:mm – HH:mm v\",\n                        \"m\": \"HH:mm – HH:mm v\"\n                    },\n                    \"hv\": {\n                        \"a\": \"h a – h a v\",\n                        \"h\": \"h – h a v\"\n                    },\n                    \"Hv\": {\n                        \"H\": \"HH – HH v\"\n                    },\n                    \"M\": {\n                        \"M\": \"M – M\"\n                    },\n                    \"Md\": {\n                        \"d\": \"M/d – M/d\",\n                        \"M\": \"M/d – M/d\"\n                    },\n                    \"MEd\": {\n                        \"d\": \"E, M/d – E, M/d\",\n                        \"M\": \"E, M/d – E, M/d\"\n                    },\n                    \"MMM\": {\n                        \"M\": \"MMM – MMM\"\n                    },\n                    \"MMMd\": {\n                        \"d\": \"MMM d – d\",\n                        \"M\": \"MMM d – MMM d\"\n                    },\n                    \"MMMEd\": {\n                        \"d\": \"E, MMM d – E, MMM d\",\n                        \"M\": \"E, MMM d – E, MMM d\"\n                    },\n                    \"y\": {\n                        \"y\": \"y – y\"\n                    },\n                    \"yM\": {\n                        \"M\": \"M/y – M/y\",\n                        \"y\": \"M/y – M/y\"\n                    },\n                    \"yMd\": {\n                        \"d\": \"M/d/y – M/d/y\",\n                        \"M\": \"M/d/y – M/d/y\",\n                        \"y\": \"M/d/y – M/d/y\"\n                    },\n                    \"yMEd\": {\n                        \"d\": \"E, M/d/y – E, M/d/y\",\n                        \"M\": \"E, M/d/y – E, M/d/y\",\n                        \"y\": \"E, M/d/y – E, M/d/y\"\n                    },\n                    \"yMMM\": {\n                        \"M\": \"MMM – MMM y\",\n                        \"y\": \"MMM y – MMM y\"\n                    },\n                    \"yMMMd\": {\n                        \"d\": \"MMM d – d, y\",\n                        \"M\": \"MMM d – MMM d, y\",\n                        \"y\": \"MMM d, y – MMM d, y\"\n                    },\n                    \"yMMMEd\": {\n                        \"d\": \"E, MMM d – E, MMM d, y\",\n                        \"M\": \"E, MMM d – E, MMM d, y\",\n                        \"y\": \"E, MMM d, y – E, MMM d, y\"\n                    },\n                    \"yMMMM\": {\n                        \"M\": \"MMMM – MMMM y\",\n                        \"y\": \"MMMM y – MMMM y\"\n                    }\n                }\n            },\n            \"timeFormats\": {\n                \"full\": \"h:mm:ss a zzzz\",\n                \"long\": \"h:mm:ss a z\",\n                \"medium\": \"h:mm:ss a\",\n                \"short\": \"h:mm a\"\n            },\n            \"dateFormats\": {\n                \"full\": \"EEEE, MMMM d, y\",\n                \"long\": \"MMMM d, y\",\n                \"medium\": \"MMM d, y\",\n                \"short\": \"M/d/yy\"\n            },\n            \"days\": {\n                \"format\": {\n                    \"abbreviated\": [\n                        \"Sun\",\n                        \"Mon\",\n                        \"Tue\",\n                        \"Wed\",\n                        \"Thu\",\n                        \"Fri\",\n                        \"Sat\"\n                    ],\n                    \"narrow\": [\n                        \"S\",\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"T\",\n                        \"F\",\n                        \"S\"\n                    ],\n                    \"short\": [\n                        \"Su\",\n                        \"Mo\",\n                        \"Tu\",\n                        \"We\",\n                        \"Th\",\n                        \"Fr\",\n                        \"Sa\"\n                    ],\n                    \"wide\": [\n                        \"Sunday\",\n                        \"Monday\",\n                        \"Tuesday\",\n                        \"Wednesday\",\n                        \"Thursday\",\n                        \"Friday\",\n                        \"Saturday\"\n                    ]\n                },\n                \"stand-alone\": {\n                    \"abbreviated\": [\n                        \"Sun\",\n                        \"Mon\",\n                        \"Tue\",\n                        \"Wed\",\n                        \"Thu\",\n                        \"Fri\",\n                        \"Sat\"\n                    ],\n                    \"narrow\": [\n                        \"S\",\n                        \"M\",\n                        \"T\",\n                        \"W\",\n                        \"T\",\n                        \"F\",\n                        \"S\"\n                    ],\n                    \"short\": [\n                        \"Su\",\n                        \"Mo\",\n                        \"Tu\",\n                        \"We\",\n                        \"Th\",\n                        \"Fr\",\n                        \"Sa\"\n                    ],\n                    \"wide\": [\n                        \"Sunday\",\n                        \"Monday\",\n                        \"Tuesday\",\n                        \"Wednesday\",\n                        \"Thursday\",\n                        \"Friday\",\n                        \"Saturday\"\n                    ]\n                }\n            },\n            \"months\": {\n                \"format\": {\n                    \"abbreviated\": [\n                        \"Jan\",\n                        \"Feb\",\n                        \"Mar\",\n                        \"Apr\",\n                        \"May\",\n                        \"Jun\",\n                        \"Jul\",\n                        \"Aug\",\n                        \"Sep\",\n                        \"Oct\",\n                        \"Nov\",\n                        \"Dec\"\n                    ],\n                    \"narrow\": [\n                        \"J\",\n                        \"F\",\n                        \"M\",\n                        \"A\",\n                        \"M\",\n                        \"J\",\n                        \"J\",\n                        \"A\",\n                        \"S\",\n                        \"O\",\n                        \"N\",\n                        \"D\"\n                    ],\n                    \"wide\": [\n                        \"January\",\n                        \"February\",\n                        \"March\",\n                        \"April\",\n                        \"May\",\n                        \"June\",\n                        \"July\",\n                        \"August\",\n                        \"September\",\n                        \"October\",\n                        \"November\",\n                        \"December\"\n                    ]\n                },\n                \"stand-alone\": {\n                    \"abbreviated\": [\n                        \"Jan\",\n                        \"Feb\",\n                        \"Mar\",\n                        \"Apr\",\n                        \"May\",\n                        \"Jun\",\n                        \"Jul\",\n                        \"Aug\",\n                        \"Sep\",\n                        \"Oct\",\n                        \"Nov\",\n                        \"Dec\"\n                    ],\n                    \"narrow\": [\n                        \"J\",\n                        \"F\",\n                        \"M\",\n                        \"A\",\n                        \"M\",\n                        \"J\",\n                        \"J\",\n                        \"A\",\n                        \"S\",\n                        \"O\",\n                        \"N\",\n                        \"D\"\n                    ],\n                    \"wide\": [\n                        \"January\",\n                        \"February\",\n                        \"March\",\n                        \"April\",\n                        \"May\",\n                        \"June\",\n                        \"July\",\n                        \"August\",\n                        \"September\",\n                        \"October\",\n                        \"November\",\n                        \"December\"\n                    ]\n                }\n            },\n            \"quarters\": {\n                \"format\": {\n                    \"abbreviated\": [\n                        \"Q1\",\n                        \"Q2\",\n                        \"Q3\",\n                        \"Q4\"\n                    ],\n                    \"narrow\": [\n                        \"1\",\n                        \"2\",\n                        \"3\",\n                        \"4\"\n                    ],\n                    \"wide\": [\n                        \"1st quarter\",\n                        \"2nd quarter\",\n                        \"3rd quarter\",\n                        \"4th quarter\"\n                    ]\n                },\n                \"stand-alone\": {\n                    \"abbreviated\": [\n                        \"Q1\",\n                        \"Q2\",\n                        \"Q3\",\n                        \"Q4\"\n                    ],\n                    \"narrow\": [\n                        \"1\",\n                        \"2\",\n                        \"3\",\n                        \"4\"\n                    ],\n                    \"wide\": [\n                        \"1st quarter\",\n                        \"2nd quarter\",\n                        \"3rd quarter\",\n                        \"4th quarter\"\n                    ]\n                }\n            },\n            \"dayPeriods\": {\n                \"format\": {\n                    \"abbreviated\": {\n                        \"midnight\": \"midnight\",\n                        \"am\": \"AM\",\n                        \"am-alt-variant\": \"am\",\n                        \"noon\": \"noon\",\n                        \"pm\": \"PM\",\n                        \"pm-alt-variant\": \"pm\",\n                        \"morning1\": \"in the morning\",\n                        \"afternoon1\": \"in the afternoon\",\n                        \"evening1\": \"in the evening\",\n                        \"night1\": \"at night\"\n                    },\n                    \"narrow\": {\n                        \"midnight\": \"mi\",\n                        \"am\": \"a\",\n                        \"am-alt-variant\": \"am\",\n                        \"noon\": \"n\",\n                        \"pm\": \"p\",\n                        \"pm-alt-variant\": \"pm\",\n                        \"morning1\": \"in the morning\",\n                        \"afternoon1\": \"in the afternoon\",\n                        \"evening1\": \"in the evening\",\n                        \"night1\": \"at night\"\n                    },\n                    \"wide\": {\n                        \"midnight\": \"midnight\",\n                        \"am\": \"AM\",\n                        \"am-alt-variant\": \"am\",\n                        \"noon\": \"noon\",\n                        \"pm\": \"PM\",\n                        \"pm-alt-variant\": \"pm\",\n                        \"morning1\": \"in the morning\",\n                        \"afternoon1\": \"in the afternoon\",\n                        \"evening1\": \"in the evening\",\n                        \"night1\": \"at night\"\n                    }\n                },\n                \"stand-alone\": {\n                    \"abbreviated\": {\n                        \"midnight\": \"midnight\",\n                        \"am\": \"AM\",\n                        \"am-alt-variant\": \"am\",\n                        \"noon\": \"noon\",\n                        \"pm\": \"PM\",\n                        \"pm-alt-variant\": \"pm\",\n                        \"morning1\": \"morning\",\n                        \"afternoon1\": \"afternoon\",\n                        \"evening1\": \"evening\",\n                        \"night1\": \"night\"\n                    },\n                    \"narrow\": {\n                        \"midnight\": \"midnight\",\n                        \"am\": \"AM\",\n                        \"am-alt-variant\": \"am\",\n                        \"noon\": \"noon\",\n                        \"pm\": \"PM\",\n                        \"pm-alt-variant\": \"pm\",\n                        \"morning1\": \"morning\",\n                        \"afternoon1\": \"afternoon\",\n                        \"evening1\": \"evening\",\n                        \"night1\": \"night\"\n                    },\n                    \"wide\": {\n                        \"midnight\": \"midnight\",\n                        \"am\": \"AM\",\n                        \"am-alt-variant\": \"am\",\n                        \"noon\": \"noon\",\n                        \"pm\": \"PM\",\n                        \"pm-alt-variant\": \"pm\",\n                        \"morning1\": \"morning\",\n                        \"afternoon1\": \"afternoon\",\n                        \"evening1\": \"evening\",\n                        \"night1\": \"night\"\n                    }\n                }\n            },\n            \"eras\": {\n                \"format\": {\n                    \"wide\": {\n                        \"0\": \"Before Christ\",\n                        \"1\": \"Anno Domini\",\n                        \"0-alt-variant\": \"Before Common Era\",\n                        \"1-alt-variant\": \"Common Era\"\n                    },\n                    \"abbreviated\": {\n                        \"0\": \"BC\",\n                        \"1\": \"AD\",\n                        \"0-alt-variant\": \"BCE\",\n                        \"1-alt-variant\": \"CE\"\n                    },\n                    \"narrow\": {\n                        \"0\": \"B\",\n                        \"1\": \"A\",\n                        \"0-alt-variant\": \"BCE\",\n                        \"1-alt-variant\": \"CE\"\n                    }\n                }\n            },\n            \"dateFields\": {\n                \"era\": {\n                    \"wide\": \"era\"\n                },\n                \"year\": {\n                    \"wide\": 'year',\n                    \"short\": 'yr.',\n                    \"narrow\": 'yr.'\n                },\n                \"quarter\": {\n                    \"wide\": 'quarter',\n                    \"short\": 'qtr.',\n                    \"narrow\": 'qtr.'\n                },\n                \"month\": {\n                    \"wide\": 'month',\n                    \"short\": 'mo.',\n                    \"narrow\": 'mo.'\n                },\n                \"week\": {\n                    \"wide\": 'week',\n                    \"short\": 'wk.',\n                    \"narrow\": 'wk.'\n                },\n                \"day\": {\n                    \"wide\": 'day',\n                    \"short\": 'day',\n                    \"narrow\": 'day'\n                },\n                \"weekday\": {\n                    \"wide\": 'day of the week'\n                },\n                \"dayperiod\": {\n                    \"wide\": 'AM/PM'\n                },\n                \"hour\": {\n                    \"wide\": 'hour',\n                    \"short\": 'hr.',\n                    \"narrow\": 'hr.'\n                },\n                \"minute\": {\n                    \"wide\": 'minute',\n                    \"short\": 'min.',\n                    \"narrow\": 'min.'\n                },\n                \"second\": {\n                    \"wide\": 'second',\n                    \"short\": 'sec.',\n                    \"narrow\": 'sec.'\n                },\n                \"zone\": {\n                    \"wide\": 'time zone'\n                }\n            }\n        }\n    },\n    \"supplemental\": {\n        \"likelySubtags\": {\n            \"en\": \"en-Latn-US\"\n        },\n        \"currencyData\": {\n            \"region\": {\n                \"US\": [\n                    {\n                        \"USD\": {\n                            \"_from\": \"1792-01-01\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"weekData\": {\n            \"firstDay\": {\n                \"US\": \"sun\"\n            }\n        }\n    }\n};\nexport default defaultData;\n","//The error is represented by unique name and corresponding message\n//The message can contain placeholders with index, e.g. {0}, {1}\n\nexport default {\n    \"NoLocale\": \"Missing locale info for '{0}'\",\n    \"NoCurrency\": \"Cannot determine currency information. Please load the locale currencies data.\",\n    \"NoSupplementalCurrency\": \"Cannot determine currency. Please load the supplemental currencyData.\",\n    \"NoCurrencyRegion\": \"No currency data for region '{0}'\",\n    \"NoCurrencyDisplay\": \"Cannot determine currency display information. Please load the locale currencies data. The default culture does not include the all currencies data.\",\n    \"NoGMTInfo\": \"Cannot determine locale GMT format. Please load the locale timeZoneNames data.\",\n    \"NoWeekData\": \"Cannot determine locale first day of week. Please load the supplemental weekData.\",\n    \"NoFirstDay\": \"Cannot determine locale first day of week. Please load the supplemental weekData. The default culture includes only the 'en-US' first day info.\",\n    \"NoValidCurrency\": \"Cannot determine a default currency for the {0} locale. Please specify explicitly the currency with the format options.\"\n};\n","import errorDetails from './error-details';\n\nconst formatRegExp = /\\{(\\d+)}?\\}/g;\n\nclass IntlError {\n    constructor({ name, message }) {\n        if (!name || !message) {\n            throw new Error(\"{ name: string, message: string } object is required!\");\n        }\n\n        this.name = name;\n        this.message = message;\n    }\n\n    formatMessage(...values) {\n        const flattenValues = flatten(values);\n\n        const formattedMessage = this.message.replace(formatRegExp, function(match, index) {\n            return flattenValues[parseInt(index, 10)];\n        });\n\n        return `${this.name}: ${formattedMessage}`;\n    }\n\n    error(...values) {\n        return new Error(this.formatMessage(values));\n    }\n}\n\nconst flatten = function(arr) {\n    return arr.reduce((a, b) => a.concat(b), []);\n};\n\nconst toIntlErrors = function(errors) {\n    const predicate = function(prev, name) {\n        prev[name] = new IntlError({ name, message: errors[name] });\n        return prev;\n    };\n\n    return Object.keys(errors).reduce(predicate, {});\n};\n\nconst errors = toIntlErrors(errorDetails);\n\nexport {\n    errors,\n    IntlError,\n    toIntlErrors\n};\n","import defaultData from './default-data';\nimport { errors } from '../errors';\n\nfunction availableLocaleInfo(fullName, suffixes) {\n    const parts = fullName.split(\"-\");\n    const language = parts[0];\n    const script = parts[1];\n    const territory = parts[2];\n\n    return cldr[fullName] || (suffixes.indexOf(territory) !== -1 && cldr[language + \"-\" + territory]) || (suffixes.indexOf(script) !== -1 && cldr[language + \"-\" + script]) || cldr[language];\n}\n\nfunction localeFullName(language, suffixes) {\n    const likelySubtags = cldr.supplemental.likelySubtags;\n\n    for (let idx = 0; idx < suffixes.length; idx++) {\n        let name = likelySubtags[language + \"-\" + suffixes[idx ]];\n        if (name) {\n            return name;\n        }\n    }\n\n    if (likelySubtags[language]) {\n        return likelySubtags[language];\n    }\n}\n\nexport const cldr = defaultData;\n\nexport function getLocaleInfo(locale) {\n    let info;\n    if (typeof locale === \"string\") {\n        info = localeInfo(locale);\n    } else {\n        info = locale;\n    }\n    return info;\n}\n\nexport function localeInfo(locale) {\n    if (cldr[locale]) {\n        return cldr[locale];\n    }\n\n    const likelySubtags = cldr.supplemental.likelySubtags;\n    if (likelySubtags) {\n        const parts = locale.split(\"-\");\n        const language = parts[0];\n        const suffixes = parts.slice(1);\n        const fullName = localeFullName(language, suffixes);\n        const info = fullName ? availableLocaleInfo(fullName, suffixes) : null;\n        if (info) {\n            return info;\n        }\n    }\n\n    throw errors.NoLocale.error(locale);\n}\n","import { cldr } from './info';\n\nfunction territoryFromName(name) {\n    const parts = name.split(\"-\");\n    const length = parts.length;\n\n    if (length > 1) {\n        const territory = parts[ length - 1 ];\n        return territory.toUpperCase();\n    }\n}\n\nexport default function localeTerritory(info) {\n    if (info.territory) {\n        return info.territory;\n    }\n\n    const likelySubtags = cldr.supplemental.likelySubtags;\n    const name = info.name;\n    let territory;\n\n    if (info.identity && info.identity.territory) {\n        territory = info.identity.territory;\n    } else if (likelySubtags && likelySubtags[name]) {\n        territory = territoryFromName(likelySubtags[name]);\n    } else {\n        territory = territoryFromName(name);\n    }\n    info.territory = territory;\n\n    return territory;\n}\n","export default function(value) {\n    const parts = value.split('-');\n    const year = parseInt(parts[0], 10);\n    const month = parseInt(parts[1], 10) - 1;\n    const day = parseInt(parts[2], 10);\n\n    return new Date(year, month, day);\n}","import { cldr, getLocaleInfo } from './info';\nimport { errors } from '../errors';\nimport localeTerritory from './territory';\nimport parseRangeDate from './parse-range-date';\n\nconst {\n    NoCurrency,\n    NoCurrencyDisplay,\n    NoSupplementalCurrency,\n    NoCurrencyRegion,\n    NoValidCurrency\n} = errors;\n\nconst DEFAULT_CURRENCY_FRACTIONS = 2;\nconst SYMBOL = \"symbol\";\nconst INVALID_CURRENCY_CODE = 'XXX';\n\nfunction getCurrencyInfo(locale, currency) {\n    const info = getLocaleInfo(locale);\n    const currencies = info.numbers.currencies;\n    if (!currencies) {\n        throw NoCurrency.error();\n    }\n\n    const currencyDisplayInfo = currencies[currency];\n\n    if (!currencyDisplayInfo) {\n        throw NoCurrencyDisplay.error();\n    }\n\n    return currencyDisplayInfo;\n}\n\nfunction lengthComparer(a, b) {\n    return b.length - a.length;\n}\n\nfunction regionCurrency(regionCurrencies) {\n    let latestValidUntil, latestValidUntilRange;\n    let latestStillValid, latestStillValidDate;\n\n    for (let idx = 0; idx < regionCurrencies.length; idx++) {\n        const currency = regionCurrencies[idx];\n        const code = Object.keys(currency)[0];\n        const info = currency[code];\n        if (code !== INVALID_CURRENCY_CODE && info._tender !== 'false' && info._from) {\n            if (!info._to) {\n                const stillValidDate = parseRangeDate(info._from);\n                if (!latestStillValidDate || latestStillValidDate < stillValidDate) {\n                    latestStillValid = code;\n                    latestStillValidDate = stillValidDate;\n                }\n            } else if (!latestStillValid) {\n                const validFrom = parseRangeDate(info._from);\n                const validTo = parseRangeDate(info._to);\n                if (!latestValidUntilRange || latestValidUntilRange.to < validTo || latestValidUntilRange.from < validFrom) {\n                    latestValidUntil = code;\n                    latestValidUntilRange = {\n                        from: validFrom,\n                        to: validTo\n                    };\n                }\n            }\n        }\n    }\n\n    return latestStillValid || latestValidUntil;\n}\n\nexport function currencyDisplays(locale, currency) {\n    const currencyInfo = getCurrencyInfo(locale, currency);\n    if (!currencyInfo.displays) {\n        const displays = [ currency ];\n        for (let field in currencyInfo) {\n            displays.push(currencyInfo[field]);\n        }\n        displays.sort(lengthComparer);\n        currencyInfo.displays = displays;\n    }\n\n    return currencyInfo.displays;\n}\n\nexport function currencyDisplay(locale, options) {\n    const { value, currency, currencyDisplay = SYMBOL } = options;\n\n    if (currencyDisplay === \"code\") {\n        return currency;\n    }\n\n    const currencyInfo = getCurrencyInfo(locale, currency);\n    let result;\n\n    if (currencyDisplay === SYMBOL) {\n        result = currencyInfo[\"symbol-alt-narrow\"] || currencyInfo[SYMBOL];\n    } else {\n        if (typeof value === undefined || value !== 1) {\n            result = currencyInfo[\"displayName-count-other\"];\n        } else {\n            result = currencyInfo[\"displayName-count-one\"];\n        }\n    }\n\n    return result;\n}\n\nexport function currencyFractionOptions(code) {\n    let minimumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;\n    let maximumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;\n\n    const fractions = ((cldr.supplemental.currencyData || {}).fractions || {})[code];\n\n    if (fractions && fractions._digits) {\n        maximumFractionDigits = minimumFractionDigits = parseInt(fractions._digits, 10);\n    }\n\n    return {\n        minimumFractionDigits: minimumFractionDigits,\n        maximumFractionDigits: maximumFractionDigits\n    };\n}\n\nexport function territoryCurrencyCode(territory) {\n    const currencyData = cldr.supplemental.currencyData;\n    if (!currencyData) {\n        throw NoSupplementalCurrency.error();\n    }\n\n    const regionCurrencies = currencyData.region[territory];\n\n    if (!regionCurrencies) {\n        throw NoCurrencyRegion.error(territory);\n    }\n\n    const currencyCode = regionCurrency(regionCurrencies);\n\n    return currencyCode;\n}\n\nexport function localeCurrency(locale, throwIfNoValid) {\n    const info = getLocaleInfo(locale);\n    const numbers = info.numbers;\n\n    if (!numbers.localeCurrency) {\n        const currency = territoryCurrencyCode(localeTerritory(info));\n\n        if (!currency && throwIfNoValid) {\n            throw NoValidCurrency.error(info.name);\n        }\n\n        numbers.localeCurrency = currency;\n    }\n\n    return numbers.localeCurrency;\n}\n","import { cldr } from './info';\nimport { territoryCurrencyCode } from './currency';\nimport localeTerritory from './territory';\n\nconst LATIN_NUMBER_FORMATS = \"Formats-numberSystem-latn\";\nconst LATIN_NUMBER_SYMBOLS = \"symbols-numberSystem-latn\";\nconst GROUP_SEPARATOR = \",\";\nconst LIST_SEPARATOR = \";\";\nconst DECIMAL_SEPARATOR = \".\";\n\nconst patternRegExp = /([ #,0. ]+)/g;\nconst cldrCurrencyRegExp = /¤/g;\n\nfunction getPatterns(pattern) {\n    patternRegExp.lastIndex = 0;\n\n    return pattern.replace(cldrCurrencyRegExp, \"$\").replace(patternRegExp, \"n\").split(\";\");\n}\n\nfunction getGroupSize(pattern) {\n    patternRegExp.lastIndex = 0;\n\n    const numberPatterns = patternRegExp.exec(pattern.split(LIST_SEPARATOR)[0])[0].split(DECIMAL_SEPARATOR);\n    const integer = numberPatterns[0];\n\n    const groupSize = integer.split(GROUP_SEPARATOR).slice(1).map(function(group) {\n        return group.length;\n    }).reverse();\n\n    return groupSize;\n}\n\nfunction loadCurrencyUnitPatterns(currencyInfo, currencyFormats) {\n    for (let field in currencyFormats) {\n        if (field.startsWith(\"unitPattern\")) {\n            currencyInfo[field] = currencyFormats[field].replace(\"{0}\", \"n\").replace(\"{1}\", \"$\");\n        }\n    }\n}\n\nexport default function loadNumbersInfo(locale, info) {\n    const localeInfo = cldr[locale];\n    const numbers = localeInfo.numbers = localeInfo.numbers || {};\n    numbers.symbols = numbers.symbols || {};\n    for (let field in info) {\n        if (field === LATIN_NUMBER_SYMBOLS) {\n            Object.assign(numbers.symbols, info[field]);\n        } else if (field.includes(LATIN_NUMBER_FORMATS)) {\n            const style = field.substr(0, field.indexOf(LATIN_NUMBER_FORMATS));\n            const pattern = info[field].standard;\n            numbers[style] = {\n                patterns: getPatterns(pattern)\n            };\n            if (style === \"currency\") {\n                numbers[style].groupSize = getGroupSize((info[\"decimal\" + LATIN_NUMBER_FORMATS] || info[field]).standard);\n                loadCurrencyUnitPatterns(numbers[style], info[field]);\n            } else {\n                numbers[style].groupSize = getGroupSize(pattern);\n            }\n        } else if (field === \"currencies\") {\n            numbers.currencies = info[field];\n            const territory = localeTerritory(localeInfo);\n            if (territory && cldr.supplemental.currencyData) {\n                numbers.localeCurrency = territoryCurrencyCode(territory);\n            }\n        }\n    }\n}","import { cldr } from './info';\n\nconst predefinedDatePatterns = {\n    s: \"yyyy'-'MM'-'dd'T'HH':'mm':'ss\",\n    u: \"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\"\n};\nconst datePatterns = {\n    d: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMd\" ] ],\n    D: [ [ \"dateFormats\", \"full\" ] ],\n    m: [ [ \"dateTimeFormats\", \"availableFormats\", \"MMMd\" ] ],\n    M: [ [ \"dateTimeFormats\", \"availableFormats\", \"MMMMd\" ] ],\n    y: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMMM\" ] ],\n    Y: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMMMM\" ] ],\n    F: [ [ \"dateFormats\", \"full\" ], [ \"timeFormats\", \"medium\" ] ],\n    g: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMd\" ], [ \"timeFormats\", \"short\" ] ],\n    G: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMd\" ], [ \"timeFormats\", \"medium\" ] ],\n    t: [ [ \"timeFormats\", \"short\" ] ],\n    T: [ [ \"timeFormats\", \"medium\" ] ]\n};\n\nfunction toArray(obj) {\n    let result = [];\n    let names = Object.getOwnPropertyNames(obj);\n    for (let idx = 0; idx < names.length; idx++) {\n        let value = obj[names[idx]];\n        result.push(value);\n    }\n    return result;\n}\n\nfunction getCalendarNames(info, isObj) {\n    const result = {};\n    for (let formatType in info) {\n        let names = result[formatType] = {};\n        for (let format in info[formatType]) {\n            let formats = info[formatType][format];\n            names[format] = isObj ? formats : toArray(formats);\n        }\n    }\n    return result;\n}\n\nfunction getEraNames(eras) {\n    const result = {};\n    const format = result.format = {};\n    const eraNameMap = {\n        eraAbbr: \"abbreviated\",\n        eraNames: \"wide\",\n        eraNarrow: \"narrow\"\n    };\n\n    for (let eraFormatName in eras) {\n        let formatName = eraNameMap[eraFormatName];\n        format[formatName] = eras[eraFormatName];\n    }\n\n    return result;\n}\n\nfunction loadCalendarNames(locale, calendar) {\n    const localeCalendar = cldr[locale].calendar;\n    localeCalendar.days = getCalendarNames(calendar.days);\n    localeCalendar.months = getCalendarNames(calendar.months);\n    localeCalendar.quarters = getCalendarNames(calendar.quarters);\n    localeCalendar.dayPeriods = getCalendarNames(calendar.dayPeriods, true);\n\n    localeCalendar.eras = getEraNames(calendar.eras);\n}\n\nfunction loadCalendarDateFields(locale, fields) {\n    const localeCalendar = cldr[locale].calendar;\n    const dateFields = {};\n\n    for (let field in fields) {\n        const [ fieldName, formatType = 'wide' ] = field.split('-');\n        const fieldInfo = dateFields[fieldName] || {};\n        const displayName = fields[field].displayName;\n\n        if (!displayName) { continue; }\n\n        fieldInfo[formatType] = displayName;\n        dateFields[fieldName] = fieldInfo;\n    }\n\n    localeCalendar.dateFields = dateFields;\n}\n\nfunction getPredefinedFormat(paths, calendar) {\n    const result = [];\n\n    for (let pathIdx = 0; pathIdx < paths.length; pathIdx++) {\n        let fields = paths[ pathIdx ];\n        let pattern = calendar;\n        for (let idx = 0; idx < fields.length; idx++) {\n            pattern = pattern[fields[idx]];\n        }\n        result.push(pattern);\n    }\n\n    return result.join(\" \");\n}\n\nfunction loadCalendarPatterns(locale, calendar) {\n    const cldrCalendar = cldr[locale].calendar;\n    const patterns = cldrCalendar.patterns = {};\n    for (let pattern in datePatterns) {\n        patterns[pattern] = getPredefinedFormat(datePatterns[pattern], calendar);\n    }\n\n    for (let pattern in predefinedDatePatterns) {\n        patterns[pattern] = predefinedDatePatterns[pattern];\n    }\n\n    cldrCalendar.dateTimeFormats = calendar.dateTimeFormats;\n    cldrCalendar.timeFormats = calendar.timeFormats;\n    cldrCalendar.dateFormats = calendar.dateFormats;\n}\n\n\nexport default function loadCalendarInfo(locale, info) {\n    const calendar = cldr[locale].calendar = cldr[locale].calendar || {};\n    for (let field in info) {\n        if (field === \"timeZoneNames\") {\n            calendar.gmtFormat = info[field].gmtFormat;\n            calendar.gmtZeroFormat = info[field].gmtZeroFormat;\n        } else if (field === \"calendars\" && info[field].gregorian) {\n            loadCalendarPatterns(locale, info[field].gregorian);\n            loadCalendarNames(locale, info[field].gregorian);\n        } else if (field === \"fields\") {\n            loadCalendarDateFields(locale, info.fields);\n        }\n    }\n}\n","import { cldr } from './info';\nimport loadNumbersInfo from './load-numbers';\nimport loadCalendarInfo from './load-dates';\nimport localeTerritory from './territory';\n\nfunction loadLocale(locale, info) {\n    for (let field in info) {\n        if (field === \"numbers\") {\n            loadNumbersInfo(locale, info[field]);\n        } else if (field === \"dates\") {\n            loadCalendarInfo(locale, info[field]);\n        }\n    }\n}\n\nexport default function load() {\n    const length = arguments.length;\n    for (let idx = 0; idx < length; idx++) {\n        let entry = arguments[idx];\n        if (entry.main) {\n            let locale = Object.keys(entry.main)[0];\n            let info = entry.main[locale];\n            let localeInfo = cldr[locale] = cldr[locale] || {};\n\n            localeInfo.name = localeInfo.name || locale;\n            localeInfo.identity = localeInfo.identity || info.identity;\n\n            localeTerritory(localeInfo);\n            loadLocale(locale, info);\n        } else if (entry.supplemental) {\n            if (entry.supplemental.weekData) {\n                cldr.supplemental.weekData = {\n                    firstDay: entry.supplemental.weekData.firstDay\n                };\n            } else {\n                Object.assign(cldr.supplemental, entry.supplemental);\n            }\n        }\n    }\n}","import { localeInfo } from './info';\n\nexport default function(options, locale = \"en\") {\n    const info = localeInfo(locale);\n    const dateFields = info.calendar.dateFields || {};\n    const fieldNameInfo = dateFields[options.type] || {};\n\n    return fieldNameInfo[options.nameType] || fieldNameInfo['wide'];\n}\n","import { getLocaleInfo } from './info';\n\nfunction lowerArray(arr) {\n    const result = [];\n    for (let idx = 0; idx < arr.length; idx++) {\n        result.push(arr[idx].toLowerCase());\n    }\n    return result;\n}\n\nfunction lowerObject(obj) {\n    const result = {};\n    for (let field in obj) {\n        result[field] = obj[field].toLowerCase();\n    }\n    return result;\n}\n\nfunction cloneLower(obj) {\n    let result = Array.isArray(obj) ? lowerArray(obj) : lowerObject(obj);\n    return result;\n}\n\nexport default function dateFormatNames(locale, options) {\n    const { type, nameType, standAlone, lower } = options;\n    const info = getLocaleInfo(locale);\n    const formatType = standAlone ? \"stand-alone\" : \"format\";\n    const lowerNameType = (lower ? \"lower-\" : \"\") + nameType;\n    const formatNames = info.calendar[type][formatType];\n    let result = formatNames[lowerNameType];\n    if (!result && lower) {\n        result = formatNames[lowerNameType] = cloneLower(formatNames[nameType]);\n    }\n    return result;\n}","import { cldr, getLocaleInfo } from './info';\nimport localeTerritory from './territory';\n\nimport { errors } from '../errors';\n\nconst { NoWeekData, NoFirstDay } = errors;\n\nconst DAYS = [ \"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\" ];\n\nexport default function firstDay(locale) {\n    const weekData = cldr.supplemental.weekData;\n    if (!weekData) {\n        throw NoWeekData.error();\n    }\n\n    const info = getLocaleInfo(locale);\n    const firstDay = weekData.firstDay[localeTerritory(info)];\n\n    if (!firstDay) {\n        throw NoFirstDay.error();\n    }\n\n    return DAYS.indexOf(firstDay);\n}\n","import { getLocaleInfo } from './info';\n\nexport default function numberSymbols(locale) {\n    const info = getLocaleInfo(locale);\n\n    return info.numbers.symbols;\n}","import { currencyDisplay, localeCurrency } from '../cldr';\n\nexport default function formatCurrencySymbol(info, options = {}) {\n    if (!options.currency) {\n        options.currency = localeCurrency(info, true);\n    }\n\n    const display = currencyDisplay(info, options);\n\n    return display;\n}\n","export default function groupInteger(number, start, end, options, info) {\n    const symbols = info.numbers.symbols;\n    const decimalIndex = number.indexOf(symbols.decimal);\n    const groupSizes = options.groupSize.slice();\n    let groupSize = groupSizes.shift();\n\n    let integerEnd = decimalIndex !== -1 ? decimalIndex : end + 1;\n\n    let integer = number.substring(start, integerEnd);\n    let result = number;\n    const integerLength = integer.length;\n\n    if (integerLength >= groupSize) {\n        let idx = integerLength;\n        let parts = [];\n\n        while (idx > -1) {\n            let value = integer.substring(idx - groupSize, idx);\n            if (value) {\n                parts.push(value);\n            }\n            idx -= groupSize;\n            let newGroupSize = groupSizes.shift();\n            groupSize = newGroupSize !== undefined ? newGroupSize : groupSize;\n\n            if (groupSize === 0) {\n                parts.push(integer.substring(0, idx));\n                break;\n            }\n        }\n\n        integer = parts.reverse().join(symbols.group);\n        result = number.substring(0, start) + integer + number.substring(integerEnd);\n    }\n\n    return result;\n}","export default function pad(number, digits = 2, right = false) {\n    const count = digits - String(number).length;\n    let result = number;\n\n    if (count > 0) {\n        const padString = new Array(count + 1).join(\"0\");\n        result = right ? number + padString : padString + number;\n    }\n\n    return result;\n}","export default function round(value, precision) {\n    let result = value;\n    let decimals = precision || 0;\n\n    result = result.toString().split('e');\n    result = Math.round(Number(result[0] + 'e' + (result[1] ? (Number(result[1]) + decimals) : decimals)));\n\n    result = result.toString().split('e');\n    result = Number(result[0] + 'e' + (result[1] ? (Number(result[1]) - decimals) : -decimals));\n\n    return result.toFixed(decimals);\n}","import formatCurrencySymbol from './format-currency-symbol';\nimport groupInteger from './group-integer';\nimport pad from '../common/pad';\nimport round from '../common/round';\nimport { currencyFractionOptions } from '../cldr';\n\nconst DEFAULT_DECIMAL_ROUNDING = 3;\nconst DEFAULT_PERCENT_ROUNDING = 0;\n\nconst trailingZeroRegex = /0+$/;\nconst DECIMAL_PLACEHOLDER = \"n\";\nconst CURRENCY = \"currency\";\nconst PERCENT = \"percent\";\nconst EMPTY = \"\";\n\nfunction fractionOptions(options) {\n    let { minimumFractionDigits, maximumFractionDigits, style } = options;\n    const isCurrency = style === CURRENCY;\n    let currencyFractions;\n    if (isCurrency) {\n        currencyFractions = currencyFractionOptions(options.currency);\n    }\n\n    if (minimumFractionDigits === undefined) {\n        minimumFractionDigits = isCurrency ? currencyFractions.minimumFractionDigits : 0;\n    }\n\n    if (maximumFractionDigits === undefined) {\n        if (style === PERCENT) {\n            maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_PERCENT_ROUNDING);\n        } else if (isCurrency) {\n            maximumFractionDigits = Math.max(minimumFractionDigits, currencyFractions.maximumFractionDigits);\n        } else {\n            maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_DECIMAL_ROUNDING);\n        }\n    }\n\n    return {\n        minimumFractionDigits: minimumFractionDigits,\n        maximumFractionDigits: maximumFractionDigits\n    };\n}\n\nfunction applyPattern(value, pattern, symbol) {\n    let result = EMPTY;\n    for (let idx = 0, length = pattern.length; idx < length; idx++) {\n        let ch = pattern.charAt(idx);\n\n        if (ch === DECIMAL_PLACEHOLDER) {\n            result += value;\n        } else if (ch === \"$\" || ch === \"%\") {\n            result += symbol;\n        } else {\n            result += ch;\n        }\n    }\n    return result;\n}\n\nfunction currencyUnitPattern(info, value) {\n    const currencyInfo = info.numbers.currency;\n    let pattern = value !== 1 ? currencyInfo[\"unitPattern-count-other\"] : currencyInfo[\"unitPattern-count-one\"];\n    if (value < 0) {\n        pattern = pattern.replace(\"n\", \"-n\");\n    }\n\n    return pattern;\n}\n\n\nexport default function standardNumberFormat(number, options, info) {\n    const { style } = options;\n\n    //return number in exponential format\n    if (style === \"scientific\") {\n        return options.minimumFractionDigits !== undefined ? number.toExponential(options.minimumFractionDigits) : number.toExponential();\n    }\n\n    const symbols = info.numbers.symbols;\n    let value = number;\n    let symbol;\n\n    if (style === CURRENCY) {\n        options.value = value;\n        symbol = formatCurrencySymbol(info, options);\n    }\n\n    if (style === PERCENT) {\n        value *= 100;\n        symbol = symbols.percentSign;\n    }\n\n    const { minimumFractionDigits, maximumFractionDigits } = fractionOptions(options);\n\n    value = round(value, maximumFractionDigits);\n\n    const negative = value < 0;\n\n    const parts = value.split(\".\");\n\n    let integer = parts[0];\n    let fraction = pad(parts[1] ? parts[1].replace(trailingZeroRegex, EMPTY) : EMPTY, minimumFractionDigits, true);\n\n    //exclude \"-\" if number is negative.\n    if (negative) {\n        integer = integer.substring(1);\n    }\n\n    if (options.minimumIntegerDigits) {\n        integer = pad(integer, options.minimumIntegerDigits);\n    }\n\n    let formattedValue = options.useGrouping !== false ? groupInteger(integer, 0, integer.length, options, info) : integer;\n\n    if (fraction) {\n        formattedValue += symbols.decimal + fraction;\n    }\n\n    let pattern;\n\n    if (style === CURRENCY && options.currencyDisplay === \"name\") {\n        pattern = currencyUnitPattern(info, number);\n    } else {\n        const patterns = options.patterns;\n        pattern = negative ? patterns[1] || (\"-\" + patterns[0]) : patterns[0];\n    }\n\n    if (pattern === DECIMAL_PLACEHOLDER && !negative) {\n        return formattedValue;\n    }\n\n    const result = applyPattern(formattedValue, pattern, symbol);\n\n    return result;\n}","import formatCurrencySymbol from './format-currency-symbol';\nimport groupInteger from './group-integer';\nimport round from '../common/round';\n\nconst CURRENCY_SYMBOL = \"$\";\nconst PERCENT_SYMBOL = \"%\";\nconst PLACEHOLDER = \"??\";\nconst CURRENCY = \"currency\";\nconst PERCENT = \"percent\";\nconst POINT = \".\";\nconst COMMA = \",\";\nconst SHARP = \"#\";\nconst ZERO = \"0\";\nconst EMPTY = \"\";\n\nconst literalRegExp = /(\\\\.)|(['][^']*[']?)|([\"][^\"]*[\"]?)/g;\nconst commaRegExp = /\\,/g;\n\nfunction setFormatLiterals(formatOptions) {\n    let format = formatOptions.format;\n    if (format.indexOf(\"'\") > -1 || format.indexOf(\"\\\"\") > -1 || format.indexOf(\"\\\\\") > -1) {\n        const literals = formatOptions.literals = [];\n        formatOptions.format = format.replace(literalRegExp, function(match) {\n            const quoteChar = match.charAt(0).replace(\"\\\\\", \"\");\n            const literal = match.slice(1).replace(quoteChar, \"\");\n\n            literals.push(literal);\n\n            return PLACEHOLDER;\n        });\n    }\n}\n\nfunction roundNumber(formatOptions) {\n    let { number, format } = formatOptions;\n    let decimalIndex = format.indexOf(POINT);\n\n    if (decimalIndex !== -1) {\n        const zeroIndex = format.lastIndexOf(ZERO) - decimalIndex;\n        const sharpIndex = format.lastIndexOf(SHARP) - decimalIndex;\n        const hasZero = zeroIndex > -1;\n        const hasSharp = sharpIndex > -1;\n        let fraction = number.toString().split(\"e\");\n\n        if (fraction[1]) {\n            fraction = round(number, Math.abs(fraction[1]));\n        } else {\n            fraction = fraction[0];\n        }\n        fraction = fraction.split(POINT)[1] || EMPTY;\n\n        let idx = fraction.length;\n\n        if (!hasZero && !hasSharp) {\n            formatOptions.format = format.substring(0, decimalIndex) + format.substring(decimalIndex + 1);\n            decimalIndex = -1;\n            idx = 0;\n        } else if (hasZero && zeroIndex > sharpIndex) {\n            idx = zeroIndex;\n        } else if (sharpIndex > zeroIndex) {\n            if (hasSharp && idx > sharpIndex) {\n                idx = sharpIndex;\n            } else if (hasZero && idx < zeroIndex) {\n                idx = zeroIndex;\n            }\n        }\n\n        if (idx > -1) {\n            number = round(number, idx);\n        }\n    } else {\n        number = round(number);\n    }\n\n    if (formatOptions.negative && (number * -1) >= 0) {\n        formatOptions.negative = false;\n    }\n\n    formatOptions.number = number;\n    formatOptions.decimalIndex = decimalIndex;\n}\n\nfunction isConstantFormat(format) {\n    return format.indexOf(SHARP) === -1 && format.indexOf(ZERO) === -1;\n}\n\nfunction setValueSpecificFormat(formatOptions) {\n    let { number, format } = formatOptions;\n    format = format.split(\";\");\n    if (formatOptions.negative && format[1]) {\n        format = format[1];\n        formatOptions.hasNegativeFormat = true;\n    } else if (number === 0) {\n        const zeroFormat = format[2];\n        format = zeroFormat || format[0];\n        if (zeroFormat && isConstantFormat(zeroFormat)) {\n            formatOptions.constant = zeroFormat;\n        }\n    } else {\n        format = format[0];\n    }\n\n    formatOptions.format = format;\n}\n\nfunction setStyleOptions(formatOptions, info) {\n    const format = formatOptions.format;\n\n    //multiply number if the format has percent\n    if (format.indexOf(PERCENT_SYMBOL) !== -1) {\n        formatOptions.style = PERCENT;\n        formatOptions.symbol = info.numbers.symbols.percentSign;\n        formatOptions.number *= 100;\n    }\n\n    if (format.indexOf(CURRENCY_SYMBOL) !== -1) {\n        formatOptions.style = CURRENCY;\n        formatOptions.symbol = formatCurrencySymbol(info);\n    }\n}\n\nfunction setGroupOptions(formatOptions) {\n    formatOptions.hasGroup = formatOptions.format.indexOf(COMMA) > -1;\n    if (formatOptions.hasGroup) {\n        formatOptions.format = formatOptions.format.replace(commaRegExp, EMPTY);\n    }\n}\n\nfunction placeholderIndex(index1, index2, start) {\n    let index;\n    if (index1 === -1 && index2 !== -1) {\n        index = index2;\n    } else if (index1 !== -1 && index2 === -1) {\n        index = index1;\n    } else {\n        index = start ? Math.min(index1, index2) : Math.max(index1, index2);\n    }\n    return index;\n}\n\nfunction setPlaceholderIndices(formatOptions) {\n    const format = formatOptions.format;\n    let sharpIndex = format.indexOf(SHARP);\n    let zeroIndex = format.indexOf(ZERO);\n\n    let start = placeholderIndex(sharpIndex, zeroIndex, true);\n\n    sharpIndex = format.lastIndexOf(SHARP);\n    zeroIndex = format.lastIndexOf(ZERO);\n\n    let end = placeholderIndex(sharpIndex, zeroIndex);\n\n    if (start === format.length) {\n        end = start;\n    }\n\n    formatOptions.start = start;\n    formatOptions.end = end;\n    formatOptions.lastZeroIndex = zeroIndex;\n}\n\nfunction replaceStyleSymbols(number, style, symbol) {\n    let result = number;\n    if (style === CURRENCY || style === PERCENT) {\n        result = EMPTY;\n        for (let idx = 0, length = number.length; idx < length; idx++) {\n            let ch = number.charAt(idx);\n            result += (ch === CURRENCY_SYMBOL || ch === PERCENT_SYMBOL) ? symbol : ch;\n        }\n    }\n    return result;\n}\n\nfunction replaceLiterals(number, literals) {\n    let result = number;\n    if (literals) {\n        const length = literals.length;\n        for (let idx = 0; idx < length; idx++) {\n            result = result.replace(PLACEHOLDER, literals[idx]);\n        }\n    }\n    return result;\n}\n\nfunction replacePlaceHolders(formatOptions, info) {\n    const { start, end, negative, format, decimalIndex, lastZeroIndex, hasNegativeFormat, hasGroup } = formatOptions;\n    let number = formatOptions.number;\n    const value = number.toString().split(POINT);\n    const length = format.length;\n    const integer = value[0];\n    const fraction = value[1] || EMPTY;\n    const integerLength = integer.length;\n    let replacement = EMPTY;\n\n    number = format.substring(0, start);\n\n    if (negative && !hasNegativeFormat) {\n        number += \"-\";\n    }\n\n    for (let idx = start; idx < length; idx++) {\n        let ch = format.charAt(idx);\n\n        if (decimalIndex === -1) {\n            if (end - idx < integerLength) {\n\n                number += integer;\n                break;\n            }\n        } else {\n            if (lastZeroIndex !== -1 && lastZeroIndex < idx) {\n                replacement = EMPTY;\n            }\n\n            if ((decimalIndex - idx) <= integerLength && decimalIndex - idx > -1) {\n                number += integer;\n                idx = decimalIndex;\n            }\n\n            if (decimalIndex === idx) {\n                number += (fraction ? info.numbers.symbols.decimal : EMPTY) + fraction;\n                idx += end - decimalIndex + 1;\n                continue;\n            }\n        }\n\n        if (ch === ZERO) {\n            number += ch;\n            replacement = ch;\n        } else if (ch === SHARP) {\n            number += replacement;\n        }\n    }\n\n    if (hasGroup) {\n        number = groupInteger(number, start + (negative ? 1 : 0), Math.max(end, (integerLength + start)), info.numbers.decimal, info);\n    }\n\n    if (end >= start) {\n        number += format.substring(end + 1);\n    }\n\n    return number;\n}\n\nfunction applyCustomFormat(formatOptions, info) {\n    let number = formatOptions.number;\n    if (formatOptions.start !== -1) {\n        number = replacePlaceHolders(formatOptions, info);\n        number = replaceStyleSymbols(number, formatOptions.style, formatOptions.symbol);\n        number = replaceLiterals(number, formatOptions.literals);\n    }\n\n    return number;\n}\n\nexport default function customNumberFormat(number, format, info) {\n    const formatOptions = {\n        negative: number < 0,\n        number: Math.abs(number),\n        format: format\n    };\n\n    setValueSpecificFormat(formatOptions);\n\n    if (formatOptions.constant) {\n        return formatOptions.constant;\n    }\n\n    setFormatLiterals(formatOptions);\n    setStyleOptions(formatOptions, info);\n    setGroupOptions(formatOptions);\n    roundNumber(formatOptions);\n    setPlaceholderIndices(formatOptions);\n\n    return applyCustomFormat(formatOptions, info);\n}","import { localeInfo } from '../cldr';\nimport standardNumberFormat from './standard-number-format';\nimport customNumberFormat from './custom-number-format';\n\nconst standardFormatRegExp = /^(n|c|p|e)(\\d*)$/i;\n\nfunction standardFormatOptions(format) {\n    const formatAndPrecision = standardFormatRegExp.exec(format);\n\n    if (formatAndPrecision) {\n        const options = {\n            style: \"decimal\"\n        };\n\n        let style = formatAndPrecision[1].toLowerCase();\n\n        if (style === \"c\") {\n            options.style = \"currency\";\n        }\n\n        if (style === \"p\") {\n            options.style = \"percent\";\n        }\n\n        if (style === \"e\") {\n            options.style = \"scientific\";\n        }\n\n        if (formatAndPrecision[2]) {\n            options.minimumFractionDigits = options.maximumFractionDigits = parseInt(formatAndPrecision[2], 10);\n        }\n\n        return options;\n    }\n}\n\nfunction getFormatOptions(format) {\n    let formatOptions;\n    if (typeof format === \"string\") {\n        formatOptions = standardFormatOptions(format);\n    } else {\n        formatOptions = format;\n    }\n\n    return formatOptions;\n}\n\nexport default function formatNumber(number, format = \"n\", locale = \"en\") {\n    if (number === undefined) {\n        return \"\";\n    }\n\n    if (!isFinite(number)) {\n        return number;\n    }\n\n    const info = localeInfo(locale);\n    const formatOptions = getFormatOptions(format);\n\n    let result;\n    if (formatOptions) {\n        const style = (formatOptions || {}).style || \"decimal\";\n        result = standardNumberFormat(number, Object.assign({}, info.numbers[style], formatOptions), info);\n    } else {\n        result = customNumberFormat(number, format, info);\n    }\n\n    return result;\n}\n","import { localeInfo, localeCurrency, currencyDisplays } from '../cldr';\n\nconst exponentRegExp = /[eE][\\-+]?[0-9]+/;\nconst nonBreakingSpaceRegExp = /\\u00A0/g;\n\nfunction cleanCurrencyNumber(value, info, format) {\n    let isCurrency = format.style === \"currency\";\n    let number = value;\n    let negative;\n\n    const currency = format.currency || localeCurrency(info, isCurrency);\n\n    if (currency) {\n        const displays = currencyDisplays(info, currency);\n        for (let idx = 0; idx < displays.length; idx++) {\n            let display = displays[idx];\n            if (number.includes(display)) {\n                number = number.replace(display, \"\");\n                isCurrency = true;\n                break;\n            }\n        }\n\n        if (isCurrency) {\n            const patterns = info.numbers.currency.patterns;\n            if (patterns.length > 1) {\n                const parts = (patterns[1] || \"\").replace(\"$\", \"\").split(\"n\");\n                if (number.indexOf(parts[0]) > -1 && number.indexOf(parts[1]) > -1) {\n                    number = number.replace(parts[0], \"\").replace(parts[1], \"\");\n                    negative = true;\n                }\n            }\n        }\n    }\n\n    return {\n        number: number,\n        negative: negative\n    };\n}\n\nexport default function parseNumber(value, locale = \"en\", format = {}) {\n    if (!value && value !== 0) {\n        return null;\n    }\n\n    if (typeof value === \"number\") {\n        return value;\n    }\n\n    const info = localeInfo(locale);\n    const symbols = info.numbers.symbols;\n\n    let number = value.toString();\n    let isPercent;\n\n    if (exponentRegExp.test(number)) {\n        number = parseFloat(number.replace(symbols.decimal, \".\"));\n        return isNaN(number) ? null : number;\n    }\n\n    const negativeSignIndex = number.indexOf(\"-\");\n    if (negativeSignIndex > 0) {\n        return null;\n    }\n\n    let isNegative = negativeSignIndex > -1;\n    const { negative: negativeCurrency, number: newNumber } = cleanCurrencyNumber(number, info, format);\n\n    number = newNumber;\n    isNegative = negativeCurrency !== undefined ? negativeCurrency : isNegative;\n\n    if (format.style === \"percent\" || number.indexOf(symbols.percentSign) > -1) {\n        number = number.replace(symbols.percentSign, \"\");\n        isPercent = true;\n    }\n\n    number = number.replace(\"-\", \"\")\n          .replace(nonBreakingSpaceRegExp, \" \")\n          .split(symbols.group.replace(nonBreakingSpaceRegExp, \" \")).join(\"\")\n          .replace(symbols.decimal, \".\");\n\n    number = parseFloat(number);\n\n    if (isNaN(number)) {\n        number = null;\n    } else if (isNegative) {\n        number *= -1;\n    }\n\n    if (number && isPercent) {\n        number /= 100;\n    }\n\n    return number;\n}\n","const formatRegExp = /\\{(\\d+)}/g;\n\nexport default function formatString(format) {\n    const values = arguments;\n\n    return format.replace(formatRegExp, (match, index) => {\n        const value = values[parseInt(index, 10) + 1];\n\n        return value;\n    });\n}","import formatString from '../common/format-string';\n\nconst REMOVAL_PENALTY = 120;\nconst ADDITION_PENALTY = 20;\nconst LENGHT_DELTA = [ 2, 1, 5, 3, 4 ];\nconst LONG_LESS_PENALTY_DELTA = -2;\nconst SHORT_LESS_PENALTY_DELTA = -1;\nconst SHORT_MORE_PENALTY_DELTA = 1;\nconst LONG_MORE_PENALTY_DELTA = 2;\n\nconst PENALTIES = {\n    [LONG_LESS_PENALTY_DELTA]: 8,\n    [SHORT_LESS_PENALTY_DELTA]: 6,\n    [LONG_MORE_PENALTY_DELTA]: 6,\n    [SHORT_MORE_PENALTY_DELTA]: 3\n};\n\nconst VALUE_FORMAT_LENGTH = {\n    numeric: 1,\n    \"2-digit\": 2,\n    short: 3,\n    long: 4,\n    narrow: 5\n};\n\nconst TIME_SPECIFIERS_REGEX = /[hHmsSzZoOvVxX]/;\n\nfunction getHourSpecifier(options) {\n    return options.hour12 ? \"h\" : \"H\";\n}\n\nconst DATE_OPTIONS_MAP = [ {\n    key: \"era\",\n    specifier: \"G\"\n}, {\n    key: \"year\",\n    specifier: \"y\"\n}, {\n    key: \"month\",\n    specifier: \"M\"\n}, {\n    key: \"day\",\n    specifier: \"d\"\n}, {\n    key: \"weekday\",\n    specifier: \"E\"\n}, {\n    key: \"hour\",\n    getSpecifier: getHourSpecifier\n}, {\n    key: \"minute\",\n    specifier: \"m\"\n}, {\n    key: \"second\",\n    specifier: \"s\"\n}, {\n    key: \"timeZoneName\",\n    specifier: \"z\"\n} ];\n\nconst specifiersRegex = {};\nconst resolvedFormats = {};\n\nfunction getSpecifierRegex(specifier) {\n    if (!specifiersRegex[specifier]) {\n        specifiersRegex[specifier] = new RegExp(specifier + \"+\");\n    }\n    return specifiersRegex[specifier];\n}\n\nfunction skeletonSpecifiers(skeleton) {\n    const result = [];\n    let current = skeleton.charAt(0);\n    let specifier = current;\n    for (let idx = 1; idx < skeleton.length; idx++) {\n        let character = skeleton.charAt(idx);\n        if (character === specifier) {\n            current += character;\n        } else {\n            result.push(current);\n            current = specifier = character;\n        }\n    }\n\n    result.push(current);\n\n    return result;\n}\n\nfunction findBestMatch(specifiers, availableFormats) {\n    const specifiersLength = specifiers.length;\n    let maxScore = -Number.MAX_VALUE;\n    let bestMatches, result;\n    for (let format in availableFormats) {\n        const matches = [];\n        let currentFormat = format.replace(\"v\", \"z\");\n        let score = 0;\n        for (let idx = 0; idx < specifiersLength; idx++) {\n            const specifier = specifiers[idx];\n            let specifierRegex = getSpecifierRegex(specifier[0]);\n            let match = (specifierRegex.exec(currentFormat) || [])[0];\n\n            if (!match) {\n                score -= REMOVAL_PENALTY;\n            } else {\n                currentFormat = currentFormat.replace(match, \"\");\n                if (match.length !== specifier.length) {\n                    let delta = Math.max(Math.min(LENGHT_DELTA[match.length] - LENGHT_DELTA[specifier.length], 2), -2);\n                    score -= PENALTIES[delta];\n                }\n            }\n\n            matches.push(match);\n\n            if (score < maxScore) {\n                break;\n            }\n        }\n\n        if (currentFormat.length) {\n            score -= skeletonSpecifiers(currentFormat).length * ADDITION_PENALTY;\n        }\n\n        if (score > maxScore) {\n            maxScore = score;\n            bestMatches = matches;\n            result = availableFormats[format];\n        }\n    }\n\n    result = result.replace(\"v\", \"z\");\n    //need to check for standalone specifiers if only one specifier\n    for (let idx = 0; idx < specifiersLength; idx++) {\n        if (bestMatches[idx] && bestMatches[idx] !== specifiers[idx]) {\n            result = result.replace(getSpecifierRegex(bestMatches[idx][0]), specifiers[idx]);\n        }\n    }\n\n\n    return result;\n}\n\nfunction cacheFormat(skeleton, format, locale) {\n    if (!resolvedFormats[locale]) {\n        resolvedFormats[locale] = {};\n    }\n    resolvedFormats[locale][skeleton] = format;\n}\n\n\nfunction skeletonFormat(skeleton, info) {\n    const availableFormats = info.calendar.dateTimeFormats.availableFormats;\n    if (availableFormats[skeleton]) {\n        return availableFormats[skeleton];\n    }\n    if (resolvedFormats[info.name] && resolvedFormats[info.name][skeleton]) {\n        return resolvedFormats[info.name][skeleton];\n    }\n    const timeStartIndex = skeleton.search(TIME_SPECIFIERS_REGEX);\n    let result;\n    if (timeStartIndex > 0) {\n        const dateSkeleton = skeleton.substr(0, timeStartIndex);\n        const timeSkeleton = skeleton.substr(timeStartIndex);\n\n        result = formatString(info.calendar.dateTimeFormats.short, //should be deterimed based on specifiers\n            availableFormats[timeSkeleton] || findBestMatch(skeletonSpecifiers(timeSkeleton), availableFormats),\n            availableFormats[dateSkeleton] || findBestMatch(skeletonSpecifiers(dateSkeleton), availableFormats));\n    } else {\n        result = findBestMatch(skeletonSpecifiers(skeleton), availableFormats);\n    }\n\n    cacheFormat(skeleton, result, info.name);\n    return result;\n}\n\nfunction skeletonFromOptions(options) {\n    let result = [];\n    for (let idx = 0; idx < DATE_OPTIONS_MAP.length; idx++) {\n        let option = DATE_OPTIONS_MAP[idx];\n        let field = option.key;\n        let value = options[field];\n        if (value) {\n            let spcifier = option.specifier || option.getSpecifier(options);\n            result.push(spcifier.repeat(VALUE_FORMAT_LENGTH[value]));\n        }\n    }\n\n    return result.join(\"\");\n}\n\nexport default function datePattern(format, info) {\n    const calendar = info.calendar;\n    let result;\n    if (typeof format === \"string\") {\n        if (calendar.patterns[format]) {\n            result = calendar.patterns[format];\n        } else {\n            result = format;\n        }\n    } else if (format) {\n        if (format.pattern) {\n            return format.pattern;\n        }\n\n        let skeleton = format.skeleton;\n        if (!skeleton) {\n            if (format.datetime) {\n                result = formatString(calendar.dateTimeFormats[format.datetime], calendar.timeFormats[format.datetime], calendar.dateFormats[format.datetime]);\n            } else if (format.date) {\n                result = calendar.dateFormats[format.date];\n            } else if (format.time) {\n                result = calendar.timeFormats[format.time];\n            } else {\n                skeleton = skeletonFromOptions(format);\n            }\n        }\n\n        if (skeleton) {\n            result = skeletonFormat(skeleton, info);\n        }\n    }\n\n    if (!result) {\n        result = calendar.patterns.d;\n    }\n\n    return result;\n}","export default function dateNameType(formatLength) {\n    let nameType;\n    if (formatLength <= 3) {\n        nameType = \"abbreviated\";\n    } else if (formatLength === 4) {\n        nameType = \"wide\";\n    } else if (formatLength === 5) {\n        nameType = \"narrow\";\n    } else if (formatLength === 6) {\n        nameType = \"short\";\n    }\n\n    return nameType;\n}","import dateFormatNames from '../cldr/date-format-names';\nimport dateNameType from './date-name-type';\n\nexport default function formatNames(locale, type, formatLength, standAlone, lower) {\n    return dateFormatNames(locale, {\n        type: type,\n        nameType: dateNameType(formatLength),\n        standAlone: standAlone,\n        lower: lower\n    });\n}","const objectToString = {}.toString;\nconst DATE_STRING = \"[object Date]\";\n\nexport default function isDate(value) {\n    return objectToString.call(value) === DATE_STRING;\n}","const MONTH = 'month';\nconst HOUR = 'hour';\nconst ZONE = 'zone';\nconst WEEKDAY = 'weekday';\nconst QUARTER = 'quarter';\n\nconst DATE_FIELD_MAP = {\n    'G': 'era',\n    'y': 'year',\n    'q': QUARTER,\n    'Q': QUARTER,\n    'M': MONTH,\n    'L': MONTH,\n    'd': 'day',\n    'E': WEEKDAY,\n    'c': WEEKDAY,\n    'e': WEEKDAY,\n    'h': HOUR,\n    'H': HOUR,\n    'm': 'minute',\n    's': 'second',\n    'a': 'dayperiod',\n    'x': ZONE,\n    'X': ZONE,\n    'z': ZONE,\n    'Z': ZONE\n};\n\nconst dateFormatRegExp = /d{1,2}|E{1,6}|e{1,6}|c{3,6}|c{1}|M{1,5}|L{1,5}|y{1,4}|H{1,2}|h{1,2}|m{1,2}|a{1,5}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|x{1,5}|X{1,5}|G{1,5}|q{1,5}|Q{1,5}|\"[^\"]*\"|'[^']*'/g;\n\nexport { dateFormatRegExp, DATE_FIELD_MAP };","import { localeInfo, firstDay } from '../cldr';\nimport formatString from '../common/format-string';\nimport datePattern from './date-pattern';\nimport formatNames from './format-names';\nimport pad from '../common/pad';\nimport isDate from '../common/is-date';\nimport { dateFormatRegExp } from './constants';\n\nfunction formatDayOfWeekIndex(day, formatLength, localeInfo) {\n    const firstDayIndex = firstDay(localeInfo);\n    let dayIndex;\n    if (day < firstDayIndex) {\n        dayIndex = 7 - firstDayIndex + day;\n    } else {\n        dayIndex = day - firstDayIndex;\n    }\n\n    return dayIndex + 1;\n}\n\nfunction formatMonth(month, formatLength, info, standAlone) {\n    if (formatLength <= 2) {\n        return pad(month + 1, formatLength);\n    }\n    return formatNames(info, \"months\", formatLength, standAlone)[month];\n}\n\nfunction formatQuarter(date, formatLength, info, standAlone) {\n    const quarter = Math.floor(date.getMonth() / 3);\n    if (formatLength < 3) {\n        return quarter + 1;\n    }\n\n    return formatNames(info, \"quarters\", formatLength, standAlone)[quarter];\n}\n\n\nfunction formatTimeZone(date, info, options) {\n    const { shortHours, optionalMinutes, separator, localizedName, zZeroOffset } = options;\n    const offset = date.getTimezoneOffset() / 60;\n    if (offset === 0 && zZeroOffset) {\n        return \"Z\";\n    }\n    const sign = offset <= 0 ? \"+\" : \"-\";\n    const hoursMinutes = Math.abs(offset).toString().split(\".\");\n    const minutes = hoursMinutes[1] || 0;\n    let result = sign + (shortHours ? hoursMinutes[0] : pad(hoursMinutes[0], 2));\n    if (minutes || !optionalMinutes) {\n        result += (separator ? \":\" : \"\") + pad(minutes, 2);\n    }\n\n    if (localizedName) {\n        const localizedFormat = offset === 0 ? info.calendar.gmtZeroFormat : info.calendar.gmtFormat;\n        result = formatString(localizedFormat, result);\n    }\n\n    return result;\n}\n\nfunction formatDayOfWeek(date, formatLength, info, standAlone) {\n    let result;\n    if (formatLength < 3) {\n        result = formatDayOfWeekIndex(date.getDay(), formatLength, info);\n    } else {\n        result = formatNames(info, \"days\", formatLength, standAlone)[date.getDay()];\n    }\n    return result;\n}\n\nconst formatters = {};\n\nformatters.d = function(date, formatLength) {\n    return pad(date.getDate(), formatLength);\n};\n\nformatters.E = function(date, formatLength, info) {\n    return formatNames(info, \"days\", formatLength)[date.getDay()];\n};\n\nformatters.M = function(date, formatLength, info) {\n    return formatMonth(date.getMonth(), formatLength, info, false);\n};\n\nformatters.L = function(date, formatLength, info) {\n    return formatMonth(date.getMonth(), formatLength, info, true);\n};\n\nformatters.y = function(date, formatLength) {\n    let year = date.getFullYear();\n    if (formatLength === 2) {\n        year = year % 100;\n    }\n    return pad(year, formatLength);\n};\n\nformatters.h = function(date, formatLength) {\n    const hours = date.getHours() % 12 || 12;\n    return pad(hours, formatLength);\n};\n\nformatters.H = function(date, formatLength) {\n    return pad(date.getHours(), formatLength);\n};\n\nformatters.m = function(date, formatLength) {\n    return pad(date.getMinutes(), formatLength);\n};\n\nformatters.s = function(date, formatLength) {\n    return pad(date.getSeconds(), formatLength);\n};\n\nformatters.S = function(date, formatLength) {\n    const milliseconds = date.getMilliseconds();\n    let result;\n    if (milliseconds !== 0) {\n        result = String(date.getMilliseconds() / 1000).split(\".\")[1].substr(0, formatLength);\n    } else {\n        result = pad(\"\", formatLength);\n    }\n    return result;\n};\n\nformatters.a = function(date, formatLength, info) {\n    return formatNames(info, \"dayPeriods\", formatLength)[date.getHours() < 12 ? \"am\" : \"pm\"];\n};\n\nformatters.z = function(date, formatLength, info) {\n    return formatTimeZone(date, info, {\n        shortHours: formatLength < 4,\n        optionalMinutes: formatLength < 4,\n        separator: true,\n        localizedName: true\n    });\n};\n\nformatters.Z = function(date, formatLength, info) {\n    return formatTimeZone(date, info, {\n        separator: formatLength > 3,\n        localizedName: formatLength === 4,\n        zZeroOffset: formatLength === 5\n    });\n};\n\nformatters.x = function(date, formatLength, info) {\n    return formatTimeZone(date, info, {\n        optionalMinutes: formatLength === 1,\n        separator: formatLength === 3 || formatLength === 5\n    });\n};\n\nformatters.X = function(date, formatLength, info) {\n    return formatTimeZone(date, info, {\n        optionalMinutes: formatLength === 1,\n        separator: formatLength === 3 || formatLength === 5,\n        zZeroOffset: true\n    });\n};\n\nformatters.G = function(date, formatLength, info) {\n    let era = date.getFullYear() >= 0 ? 1 : 0;\n    return formatNames(info, \"eras\", formatLength)[era];\n};\n\nformatters.e = formatDayOfWeek;\n\nformatters.c = function(date, formatLength, info) {\n    return formatDayOfWeek(date, formatLength, info, true);\n};\n\nformatters.q = function(date, formatLength, info) {\n    return formatQuarter(date, formatLength, info, true);\n};\n\nformatters.Q = formatQuarter;\n\nexport default function formatDate(date, format, locale = \"en\") {\n    if (!isDate(date)) {\n        return date;\n    }\n\n    const info = localeInfo(locale);\n    const pattern = datePattern(format, info);\n\n    return pattern.replace(dateFormatRegExp, function(match) {\n        let formatLength = match.length;\n        let result;\n\n        if (match.includes(\"'\") || match.includes(\"\\\"\")) {\n            result = match.slice(1, formatLength - 1);\n        } else {\n            result = formatters[match[0]](date, formatLength, info);\n        }\n\n        return result;\n    });\n}\n","export function convertTimeZone(date, fromOffset, toOffset) {\n    const fromLocalOffset = date.getTimezoneOffset();\n\n    const offsetDate = new Date(date.getTime() + (fromOffset - toOffset) * 60000);\n\n    const toLocalOffset = offsetDate.getTimezoneOffset();\n\n    return new Date(offsetDate.getTime() + (toLocalOffset - fromLocalOffset) * 60000);\n}\n\nexport function adjustDST(date, hours) {\n    if (!hours && date.getHours() === 23) {\n        date.setHours(date.getHours() + 2);\n    }\n}","import { adjustDST, convertTimeZone } from './time-utils';\nimport { localeInfo } from '../cldr';\nimport { errors } from '../errors';\nimport formatNames from './format-names';\nimport datePattern from './date-pattern';\nimport round from '../common/round';\nimport isDate from '../common/is-date';\n\nconst timeZoneOffsetRegExp = /([+|\\-]\\d{1,2})(:?)(\\d{2})?/;\nconst dateRegExp = /^\\/Date\\((.*?)\\)\\/$/;\nconst offsetRegExp = /[+-]\\d*/;\nconst numberRegExp = {\n    2: /^\\d{1,2}/,\n    3: /^\\d{1,3}/,\n    4: /^\\d{4}/\n};\nconst numberRegex = /\\d+/;\nconst PLACEHOLDER = \"{0}\";\n\nconst standardDateFormats = [\n    \"yyyy/MM/dd HH:mm:ss\",\n    \"yyyy/MM/dd HH:mm\",\n    \"yyyy/MM/dd\",\n    \"E MMM dd yyyy HH:mm:ss\",\n    \"yyyy-MM-ddTHH:mm:ss.SSSSSSSXXX\",\n    \"yyyy-MM-ddTHH:mm:ss.SSSXXX\",\n    \"yyyy-MM-ddTHH:mm:ssXXX\",\n    \"yyyy-MM-ddTHH:mm:ss.SSSSSSS\",\n    \"yyyy-MM-ddTHH:mm:ss.SSS\",\n    \"yyyy-MM-ddTHH:mmXXX\",\n    \"yyyy-MM-ddTHH:mmX\",\n    \"yyyy-MM-ddTHH:mm:ss\",\n    \"yyyy-MM-ddTHH:mm\",\n    \"yyyy-MM-dd HH:mm:ss\",\n    \"yyyy-MM-dd HH:mm\",\n    \"yyyy-MM-dd\",\n    \"HH:mm:ss\",\n    \"HH:mm\"\n];\nconst FORMATS_SEQUENCE = [ \"G\", \"g\", \"F\", \"Y\", \"y\", \"M\", \"m\", \"D\", \"d\", \"y\", \"T\", \"t\" ];\nconst TWO_DIGIT_YEAR_MAX = 2029;\n\nfunction outOfRange(value, start, end) {\n    return !(value >= start && value <= end);\n}\n\nfunction lookAhead(match, state) {\n    let { format, idx } = state;\n    let i = 0;\n    while (format[idx] === match) {\n        i++;\n        idx++;\n    }\n    if (i > 0) {\n        idx -= 1;\n    }\n    state.idx = idx;\n    return i;\n}\n\nfunction getNumber(size, state) {\n    let regex = size ? (numberRegExp[size] || new RegExp('^\\\\d{1,' + size + '}')) : numberRegex,\n        match = state.value.substr(state.valueIdx, size).match(regex);\n\n    if (match) {\n        match = match[0];\n        state.valueIdx += match.length;\n        return parseInt(match, 10);\n    }\n    return null;\n}\n\nfunction getIndexByName(names, state, lower) {\n    let i = 0,\n        length = names.length,\n        name, nameLength,\n        matchLength = 0,\n        matchIdx = 0,\n        subValue;\n\n    for (; i < length; i++) {\n        name = names[i];\n        nameLength = name.length;\n        subValue = state.value.substr(state.valueIdx, nameLength);\n\n        if (lower) {\n            subValue = subValue.toLowerCase();\n        }\n\n        if (subValue === name && nameLength > matchLength) {\n            matchLength = nameLength;\n            matchIdx = i;\n        }\n    }\n\n    if (matchLength) {\n        state.valueIdx += matchLength;\n        return matchIdx + 1;\n    }\n\n    return null;\n}\n\nfunction checkLiteral(state) {\n    let result = false;\n    if (state.value.charAt(state.valueIdx) === state.format[state.idx]) {\n        state.valueIdx++;\n        result = true;\n    }\n    return result;\n}\n\nfunction calendarGmtFormats(calendar) {\n    const { gmtFormat, gmtZeroFormat } = calendar;\n    if (!gmtFormat) {\n        throw errors.NoGMTInfo.error();\n    }\n\n    return [ gmtFormat.replace(PLACEHOLDER, \"\").toLowerCase(), gmtZeroFormat.replace(PLACEHOLDER, \"\").toLowerCase() ];\n}\n\nfunction parseTimeZoneOffset(state, info, options) {\n    const { shortHours, noSeparator, optionalMinutes, localizedName, zLiteral } = options;\n    state.UTC = true;\n\n    if (zLiteral && state.value.charAt(state.valueIdx) === \"Z\") {\n        state.valueIdx++;\n        return false;\n    }\n\n    if (localizedName && !getIndexByName(calendarGmtFormats(info.calendar), state, true)) {\n        return true;\n    }\n\n    const matches = timeZoneOffsetRegExp.exec(state.value.substr(state.valueIdx, 6));\n    if (!matches) {\n        return !localizedName;\n    }\n\n    const hoursMatch = matches[1];\n    const minutesMatch = matches[3];\n    const hoursOffset = parseInt(hoursMatch, 10);\n    const separator = matches[2];\n    let minutesOffset = parseInt(minutesMatch, 10);\n\n    if (isNaN(hoursOffset) || (!shortHours && hoursMatch.length !== 3) || (!optionalMinutes && isNaN(minutesOffset)) || (noSeparator && separator)) {\n        return true;\n    }\n\n    if (isNaN(minutesOffset)) {\n        minutesOffset = null;\n    }\n\n    if (outOfRange(hoursOffset, -12, 13) || (minutesOffset && outOfRange(minutesOffset, 0, 59))) {\n        return true;\n    }\n\n    state.valueIdx += matches[0].length;\n    state.hoursOffset = hoursOffset;\n    state.minutesOffset = minutesOffset;\n}\n\nfunction parseMonth(ch, state, info) {\n    const count = lookAhead(ch, state);\n    const names = formatNames(info, \"months\", count, ch === \"L\", true);\n\n    const month = count < 3 ? getNumber(2, state) : getIndexByName(names, state, true);\n\n    if (month === null || outOfRange(month, 1, 12)) {\n        return true;\n    }\n    state.month = month - 1;\n}\n\nfunction parseDayOfWeek(ch, state, info) {\n    const count = lookAhead(ch, state);\n    const names = formatNames(info, \"days\", count, ch === \"c\", true);\n    let dayOfWeek = count < 3 ? getNumber(1, state) : getIndexByName(names, state, true);\n    if ((!dayOfWeek && dayOfWeek !== 0) || outOfRange(dayOfWeek, 1, 7)) {\n        return true;\n    }\n}\n\nconst parsers = {};\n\nparsers.d = function(state) {\n    lookAhead(\"d\", state);\n    const day = getNumber(2, state);\n\n    if (day === null || outOfRange(day, 1, 31)) {\n        return true;\n    }\n\n    if (state.day === null) {\n        state.day = day;\n    }\n};\n\nparsers.E = function(state, info) {\n    const count = lookAhead(\"E\", state);\n    //validate if it matches the day?\n    let dayOfWeek = getIndexByName(formatNames(info, \"days\", count, false, true), state, true);\n    if (dayOfWeek === null) {\n        return true;\n    }\n};\n\nparsers.M = function(state, info) {\n    return parseMonth(\"M\", state, info);\n};\n\nparsers.L = function(state, info) {\n    return parseMonth(\"L\", state, info);\n};\n\nparsers.y = function(state) {\n    const count = lookAhead(\"y\", state);\n    let year = getNumber(count === 1 ? undefined : count, state);\n\n    if (year === null) {\n        return true;\n    }\n\n    if (count === 2) {\n        const currentYear = new Date().getFullYear();\n        year = (currentYear - currentYear % 100) + year;\n        if (year > TWO_DIGIT_YEAR_MAX) {\n            year -= 100;\n        }\n    }\n\n    state.year = year;\n};\n\nparsers.h = function(state) {\n    lookAhead(\"h\", state);\n\n    let hours = getNumber(2, state);\n    if (hours === 12) {\n        hours = 0;\n    }\n\n    if (hours === null || outOfRange(hours, 0, 11)) {\n        return true;\n    }\n\n    state.hours = hours;\n};\n\nparsers.a = function(state, info) {\n    const count = lookAhead(\"a\", state);\n    let periodFormats = formatNames(info, \"dayPeriods\", count, false, true);\n\n    const pmHour = getIndexByName([ periodFormats.pm ], state,true);\n    if (!pmHour && !getIndexByName([ periodFormats.am ], state, true)) {\n        return true;\n    }\n\n    state.pmHour = pmHour;\n};\n\nparsers.H = function(state) {\n    lookAhead(\"H\", state);\n    const hours = getNumber(2, state);\n    if (hours === null || outOfRange(hours, 0, 23)) {\n        return true;\n    }\n    state.hours = hours;\n};\n\nparsers.m = function(state) {\n    lookAhead(\"m\", state);\n    const minutes = getNumber(2, state);\n\n    if (minutes === null || outOfRange(minutes, 0, 59)) {\n        return true;\n    }\n\n    state.minutes = minutes;\n};\n\nparsers.s = function(state) {\n    lookAhead(\"s\", state);\n    const seconds = getNumber(2, state);\n    if (seconds === null || outOfRange(seconds, 0, 59)) {\n        return true;\n    }\n    state.seconds = seconds;\n};\n\nparsers.S = function(state) {\n    const count = lookAhead(\"S\", state);\n    const match = state.value.substr(state.valueIdx, count);\n    let milliseconds = null;\n\n    if (!isNaN(parseInt(match, 10))) {\n        milliseconds = parseFloat(\"0.\" + match, 10);\n        milliseconds = round(milliseconds, 3);\n        milliseconds *= 1000;\n        state.valueIdx += count;\n    }\n\n    if (milliseconds === null || outOfRange(milliseconds, 0, 999)) {\n        return true;\n    }\n\n    state.milliseconds = milliseconds;\n};\n\nparsers.z = function(state, info) {\n    const count = lookAhead(\"z\", state);\n\n    const shortFormat = count < 4;\n\n    const invalid = parseTimeZoneOffset(state, info, {\n        shortHours: shortFormat,\n        optionalMinutes: shortFormat,\n        localizedName: true\n    });\n\n    if (invalid) {\n        return invalid;\n    }\n};\n\nparsers.Z = function(state, info) {\n    const count = lookAhead(\"Z\", state);\n\n    const invalid = parseTimeZoneOffset(state, info, {\n        noSeparator: count < 4,\n        zLiteral: count === 5,\n        localizedName: count === 4\n    });\n\n    if (invalid) {\n        return invalid;\n    }\n};\n\nparsers.x = function(state, info) {\n    const count = lookAhead(\"x\", state);\n\n    const invalid = parseTimeZoneOffset(state, info, {\n        noSeparator: count !== 3 && count !== 5,\n        optionalMinutes: count === 1\n    });\n    if (invalid) {\n        return invalid;\n    }\n};\n\nparsers.X = function(state, info) {\n    const count = lookAhead(\"X\", state);\n\n    const invalid = parseTimeZoneOffset(state, info, {\n        noSeparator: count !== 3 && count !== 5,\n        optionalMinutes: count === 1,\n        zLiteral: true\n    });\n    if (invalid) {\n        return invalid;\n    }\n};\n\nparsers.G = function(state, info) {\n    const count = lookAhead(\"G\", state);\n    const eras = formatNames(info, \"eras\", count, false, true);\n    const era = getIndexByName([ eras[0], eras[1] ], state, true);\n\n    if (era === null) {\n        return true;\n    }\n};\n\nparsers.e = function(state, info) {\n    return parseDayOfWeek(\"e\", state, info);\n};\n\nparsers.c = function(state, info) {\n    return parseDayOfWeek(\"c\", state, info);\n};\n\nfunction createDate(state) {\n    let { year, month, day, hours, minutes, seconds, milliseconds, pmHour, UTC, hoursOffset, minutesOffset } = state;\n    const hasTime = hours !== null || minutes !== null || seconds || null;\n    const date = new Date();\n    let result;\n\n    if (year === null && month === null && day === null && hasTime) {\n        year = date.getFullYear();\n        month = date.getMonth();\n        day = date.getDate();\n    } else {\n        if (year === null) {\n            year = date.getFullYear();\n        }\n\n        if (day === null) {\n            day = 1;\n        }\n    }\n\n    if (pmHour && hours < 12) {\n        hours += 12;\n    }\n\n    if (UTC) {\n        if (hoursOffset) {\n            hours += -hoursOffset;\n        }\n\n        if (minutesOffset) {\n            minutes += -minutesOffset * (hoursOffset < 0 ? -1 : 1);\n        }\n\n        result = new Date(Date.UTC(year, month, day, hours, minutes, seconds, milliseconds));\n    } else {\n        result = new Date(year, month, day, hours, minutes, seconds, milliseconds);\n        adjustDST(result, hours);\n    }\n\n    if (year < 100) {\n        result.setFullYear(year);\n    }\n\n    if (result.getDate() !== day && UTC === undefined) {\n        return null;\n    }\n\n    return result;\n}\n\nfunction parseExact(value, format, info) {\n    let pattern = datePattern(format, info).split(\"\");\n\n    const state = {\n        format: pattern,\n        idx: 0,\n        value: value,\n        valueIdx: 0,\n        year: null,\n        month: null,\n        day: null,\n        hours: null,\n        minutes: null,\n        seconds: null,\n        milliseconds: null\n    };\n    const length = pattern.length;\n    let literal = false;\n\n    for (; state.idx < length; state.idx++) {\n        let ch = pattern[state.idx];\n\n        if (literal) {\n            if (ch === \"'\") {\n                literal = false;\n            }\n\n            checkLiteral(state);\n        } else {\n            if (parsers[ch]) {\n                let invalid = parsers[ch](state, info);\n                if (invalid) {\n                    return null;\n                }\n            } else if (ch === \"'\") {\n                literal = true;\n                checkLiteral(state);\n            } else if (!checkLiteral(state)) {\n                return null;\n            }\n        }\n    }\n\n    if (state.valueIdx < value.length) {\n        return null;\n    }\n\n    return createDate(state) || null;\n}\n\nfunction parseMicrosoftDateOffset(offset) {\n    const sign = offset.substr(0, 1) === \"-\" ? -1 : 1;\n\n    let result = offset.substring(1);\n    result = (parseInt(result.substr(0, 2), 10) * 60) + parseInt(result.substring(2), 10);\n\n    return sign * result;\n}\n\nfunction parseMicrosoftDateFormat(value) {\n    if (value && value.indexOf(\"/D\") === 0) {\n        let date = dateRegExp.exec(value);\n        if (date) {\n            date = date[1];\n            let tzoffset = offsetRegExp.exec(date.substring(1));\n\n            date = new Date(parseInt(date, 10));\n\n            if (tzoffset) {\n                tzoffset = parseMicrosoftDateOffset(tzoffset[0]);\n                date = convertTimeZone(date, date.getTimezoneOffset(), 0);\n                date = convertTimeZone(date, 0, -1 * tzoffset);\n            }\n\n            return date;\n        }\n    }\n}\n\nfunction defaultFormats(calendar) {\n    const formats = [];\n    const patterns = calendar.patterns;\n    const length = FORMATS_SEQUENCE.length;\n\n    for (let idx = 0; idx < length; idx++) {\n        formats.push(patterns[FORMATS_SEQUENCE[idx]]);\n    }\n\n    return formats.concat(standardDateFormats);\n}\n\nexport default function parseDate(value, formats, locale = \"en\") {\n    if (!value) {\n        return null;\n    }\n\n    if (isDate(value)) {\n        return value;\n    }\n\n    let parseValue = String(value).trim();\n    let date = parseMicrosoftDateFormat(parseValue);\n    if (date) {\n        return date;\n    }\n\n    const info = localeInfo(locale);\n    let parseFormats = formats || defaultFormats(info.calendar);\n    parseFormats = Array.isArray(parseFormats) ? parseFormats : [ parseFormats ];\n\n    const length = parseFormats.length;\n\n    for (let idx = 0; idx < length; idx++) {\n        date = parseExact(parseValue, parseFormats[idx], info);\n        if (date) {\n            return date;\n        }\n    }\n\n    return date;\n}\n","import datePattern from './date-pattern';\nimport dateNameType from './date-name-type';\nimport { dateFormatRegExp, DATE_FIELD_MAP } from './constants';\nimport { localeInfo } from '../cldr';\n\nconst NAME_TYPES = {\n    month: {\n        type: 'months',\n        minLength: 3,\n        standAlone: 'L'\n    },\n\n    quarter: {\n        type: 'quarters',\n        minLength: 3,\n        standAlone: 'q'\n    },\n\n    weekday: {\n        type: 'days',\n        minLength: {\n            E: 0,\n            c: 3,\n            e: 3\n        },\n        standAlone: 'c'\n    },\n\n    dayperiod: {\n        type: 'dayPeriods',\n        minLength: 0\n    },\n\n    era: {\n        type: 'eras',\n        minLength: 0\n    }\n};\n\nconst LITERAL = 'literal';\nconst NUMBER = 'number';\n\nfunction addLiteral(parts, value) {\n    const lastPart = parts[parts.length - 1];\n    if (lastPart && lastPart.type === LITERAL) {\n        lastPart.pattern += value;\n    } else {\n        parts.push({\n            type: LITERAL,\n            pattern: value\n        });\n    }\n}\n\nexport default function splitDateFormat(format, locale = 'en') {\n    const info = localeInfo(locale);\n    const pattern = datePattern(format, info);\n    const parts = [];\n    let lastIndex = dateFormatRegExp.lastIndex = 0;\n    let match = dateFormatRegExp.exec(pattern);\n\n    while (match) {\n        let value = match[0];\n\n        if (lastIndex < match.index) {\n            addLiteral(parts, pattern.substring(lastIndex, match.index));\n        }\n\n        if (value.startsWith('\"') || value.startsWith(\"'\")) {\n            addLiteral(parts, value);\n        } else {\n            const specifier = value[0];\n            const type = DATE_FIELD_MAP[specifier];\n            const part = {\n                type: type,\n                pattern: value\n            };\n\n            const names = NAME_TYPES[type];\n\n            if (names) {\n                const minLength = typeof names.minLength === NUMBER ? names.minLength : names.minLength[specifier];\n                const patternLength = value.length;\n\n                if (patternLength >= minLength) {\n                    part.names = {\n                        type: names.type,\n                        nameType: dateNameType(patternLength),\n                        standAlone: names.standAlone === specifier\n                    };\n                }\n            }\n\n            parts.push(part);\n        }\n\n        lastIndex = dateFormatRegExp.lastIndex;\n        match = dateFormatRegExp.exec(pattern);\n    }\n\n    if (lastIndex < pattern.length) {\n        addLiteral(parts, pattern.substring(lastIndex));\n    }\n\n    return parts;\n}","import { formatDate } from './dates';\nimport { formatNumber } from './numbers';\nimport isDate from './common/is-date';\n\nconst formatRegExp = /\\{(\\d+)(:[^\\}]+)?\\}/g;\n\nexport function toString(value, format, locale) {\n    if (format) {\n        if (isDate(value)) {\n            return formatDate(value, format, locale);\n        } else if (typeof value === \"number\") {\n            return formatNumber(value, format, locale);\n        }\n    }\n\n    return value !== undefined ? value : \"\";\n}\n\nexport function format(format, values, locale) {\n    return format.replace(formatRegExp, function(match, index, placeholderFormat) {\n        let value = values[parseInt(index, 10)];\n\n        return toString(value, placeholderFormat ? placeholderFormat.substring(1) : \"\", locale);\n    });\n}\n"],"names":["const","let","localeInfo","pattern","arguments","CURRENCY","PERCENT","EMPTY","formatRegExp","idx","PLACEHOLDER"],"mappings":"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"}